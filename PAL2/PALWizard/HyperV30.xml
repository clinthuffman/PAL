<PAL NAME="Microsoft Windows Server 2012 Hyper-V" DESCRIPTION="General operating system performance analysis for Microsoft Windows Server 2012 with Hyper-V. Use this for a general analysis of the operating system performance counters." CONTENTOWNERS="Thomas Roettinger &amp; Chad Schultz" FEEDBACKEMAILADDRESS="thoroet@microsoft.com;chad.a@microsoft.com" VERSION="1.1" PALVERSION="2.3" LANGUAGE="English" LANGUAGECODE="en">
  <ANALYSIS NAME="Hyper-V Virtual Guest Computer Processor Analysis" ENABLED="True" CATEGORY="Hyper-V Hypervisor Virtual Processor" PRIMARYDATASOURCE="\Hyper-V Hypervisor Virtual Processor(*)\% Guest Run Time" ID="{7a3bd70e-1548-4651-8af7-f9f16a2432b7}" FROMALLCOUNTERSTATS="False">
    <DESCRIPTION><![CDATA[This analysis checks the processor utilization of guest, virtual computer processors. The "\Hyper-V Hypervisor Virtual Processor(*)\% Guest Run Time" performance counter is more accurate than using the "% Processor Time" counter within the virtual computer due to clock calculation drift.]]></DESCRIPTION>
    <DATASOURCE TYPE="CounterLog" NAME="\Hyper-V Hypervisor Virtual Processor(*)\% Guest Run Time" COLLECTIONVARNAME="CollectionOfHyperVHypervisorVirtualProcessorPercentGuestRunTimeALL" EXPRESSIONPATH="\Hyper-V Hypervisor Virtual Processor(*)\% Guest Run Time" DATATYPE="integer" />
    <THRESHOLD NAME="Hyper-V: High processor utilization of more than 75% on a virtual processor" CONDITION="Warning" COLOR="Yellow" PRIORITY="50">
      <DESCRIPTION><![CDATA[ ]]></DESCRIPTION>
      <CODE><![CDATA[
        StaticThreshold -CollectionOfCounterInstances $CollectionOfHyperVHypervisorVirtualProcessorPercentGuestRunTimeALL -Operator 'gt' -Threshold 75        
         ]]></CODE>
    </THRESHOLD>
    <THRESHOLD NAME="Hyper-V: Very high processor utilization of more than 90% on a virtual processor" CONDITION="Critical" COLOR="Red" PRIORITY="100">
      <DESCRIPTION><![CDATA[ ]]></DESCRIPTION>
      <CODE><![CDATA[
        StaticThreshold -CollectionOfCounterInstances $CollectionOfHyperVHypervisorVirtualProcessorPercentGuestRunTimeALL -Operator 'gt' -Threshold 90        
         ]]></CODE>
    </THRESHOLD>
    <CHART CHARTTITLE="\Hyper-V Hypervisor Virtual Processor(*)\% Guest Run Time" ISTHRESHOLDSADDED="True" DATASOURCE="\Hyper-V Hypervisor Virtual Processor(*)\% Guest Run Time" CHARTLABELS="instance">
      <SERIES NAME="Warning">
        <CODE><![CDATA[
          StaticChartThreshold -CollectionOfCounterInstances $CollectionOfHyperVHypervisorVirtualProcessorPercentGuestRunTimeALL -MinThreshold 75 -MaxThreshold 90 -UseMaxValue $False
        ]]></CODE>
      </SERIES>
      <SERIES NAME="Critical">
        <CODE><![CDATA[
          StaticChartThreshold -CollectionOfCounterInstances $CollectionOfHyperVHypervisorVirtualProcessorPercentGuestRunTimeALL -MinThreshold 90 -MaxThreshold 99.999 -UseMaxValue $False
        ]]></CODE>
      </SERIES>
    </CHART>
  </ANALYSIS>
  <ANALYSIS NAME="Hyper-V Physical Server Processor Analysis" ENABLED="True" CATEGORY="Hyper-V Hypervisor Logical Processor" PRIMARYDATASOURCE="\Hyper-V Hypervisor Logical Processor(*)\% Total Run Time" ID="{c86eea9f-b86d-49eb-a75b-8aa3cc8184b4}" FROMALLCOUNTERSTATS="False">
    <DESCRIPTION><![CDATA[This analysis checks the processor utilization of <B>physical processors</B> of the host computer. The "\Hyper-V Hypervisor Logical Processor(*)\% Total Run Time" performance counter is more accurate than using the "% Processor Time" counter on the host, root partition computer because the "% Processor Time" counter only measures the processor time of the host, root partition computer only. The "\Hyper-V Hypervisor Logical Processor(*)\% Total Run Time" performance counter is the best counter to use to analyze overall processor utilization of the Hyper-V server.]]></DESCRIPTION>
    <DATASOURCE TYPE="CounterLog" NAME="\Hyper-V Hypervisor Logical Processor(*)\% Total Run Time" COLLECTIONVARNAME="CollectionOfHyperVHypervisorLogicalProcessorPercentTotalRunTimeALL" EXPRESSIONPATH="\Hyper-V Hypervisor Logical Processor(*)\% Total Run Time" DATATYPE="integer" />
    <THRESHOLD NAME="Hyper-V: High processor utilization of more than 75% on a physical processor" CONDITION="Warning" COLOR="Yellow" PRIORITY="50">
      <DESCRIPTION><![CDATA[ ]]></DESCRIPTION>
      <CODE><![CDATA[
        StaticThreshold -CollectionOfCounterInstances $CollectionOfHyperVHypervisorLogicalProcessorPercentTotalRunTimeALL -Operator 'gt' -Threshold 75        
         ]]></CODE>
    </THRESHOLD>
    <THRESHOLD NAME="Hyper-V: Very high processor utilization of more than 90% on a physical processor" CONDITION="Critical" COLOR="Red" PRIORITY="100">
      <DESCRIPTION><![CDATA[ ]]></DESCRIPTION>
      <CODE><![CDATA[
        StaticThreshold -CollectionOfCounterInstances $CollectionOfHyperVHypervisorLogicalProcessorPercentTotalRunTimeALL -Operator 'gt' -Threshold 90        
         ]]></CODE>
    </THRESHOLD>
    <CHART CHARTTITLE="\Hyper-V Hypervisor Logical Processor(*)\% Total Run Time" ISTHRESHOLDSADDED="True" DATASOURCE="\Hyper-V Hypervisor Logical Processor(*)\% Total Run Time" CHARTLABELS="instance">
      <SERIES NAME="Warning">
        <CODE><![CDATA[
          StaticChartThreshold -CollectionOfCounterInstances $CollectionOfHyperVHypervisorLogicalProcessorPercentTotalRunTimeALL -MinThreshold 75 -MaxThreshold 90 -UseMaxValue $False
        ]]></CODE>
      </SERIES>
      <SERIES NAME="Critical">
        <CODE><![CDATA[
          StaticChartThreshold -CollectionOfCounterInstances $CollectionOfHyperVHypervisorLogicalProcessorPercentTotalRunTimeALL -MinThreshold 90 -MaxThreshold 99.999 -UseMaxValue $False
        ]]></CODE>
      </SERIES>
    </CHART>
  </ANALYSIS>
  <ANALYSIS NAME="Hyper-V Physical Server Network Analysis" ENABLED="True" CATEGORY="Hyper-V Virtual Network Adapter" PRIMARYDATASOURCE="\Hyper-V Virtual Network Adapter(*)\Bytes/sec" ID="{905e7024-ef17-4968-bce3-8634b40dd921}" FROMALLCOUNTERSTATS="False">
    <DESCRIPTION><![CDATA[This counter represents the total number of bytes that have traversed the network adapter. Bytes/sec is the rate at which bytes are sent and received over each network adapter both physical and virtual. How quickly you can identify a problem depends on the type of network you have as well as whether you share bandwidth with other applications, services, or virtual computers.<BR>
<BR>
Unlike the Network Interface performance counter object, the connection speed of the virtual network adapters is not exposed as a performance counter, therefore statistics only are provided for this counter. See the Network Interface\Bytes Total/sec alerts to determine if network saturation is occurring on the physical network adapters.]]></DESCRIPTION>
    <DATASOURCE TYPE="CounterLog" NAME="\Hyper-V Virtual Network Adapter(*)\Bytes/sec" COLLECTIONVARNAME="HyperVVirtualNetworkAdapterBytessecALL" EXPRESSIONPATH="\Hyper-V Virtual Network Adapter(*)\Bytes/sec" DATATYPE="integer" />
    <CHART CHARTTITLE="\Hyper-V Virtual Network Adapter(*)\Bytes/sec" ISTHRESHOLDSADDED="False" DATASOURCE="\Hyper-V Virtual Network Adapter(*)\Bytes/sec" CHARTLABELS="instance" />
  </ANALYSIS>
  <ANALYSIS NAME="Hyper-V Virtual Switch Bytes/Sec" ENABLED="True" CATEGORY="Hyper-V Virtual Switch" PRIMARYDATASOURCE="\Hyper-V Virtual Switch(*)\Bytes/sec" ID="{b1bc9b24-b8de-4c18-a9e3-82d2f9782254}" FROMALLCOUNTERSTATS="False">
    <DESCRIPTION><![CDATA[This counter represents the total number of bytes per second traversing the virtual switch.]]></DESCRIPTION>
    <DATASOURCE TYPE="CounterLog" NAME="\Hyper-V Virtual Switch(*)\Bytes/sec" COLLECTIONVARNAME="HyperVVirtualSwitchBytessecALL" EXPRESSIONPATH="\Hyper-V Virtual Switch(*)\Bytes/sec" DATATYPE="integer" />
    <CHART CHARTTITLE="\Hyper-V Virtual Switch(*)\Bytes/sec" ISTHRESHOLDSADDED="False" DATASOURCE="\Hyper-V Virtual Switch(*)\Bytes/sec" CHARTLABELS="instance" />
  </ANALYSIS>
  <ANALYSIS NAME="Hyper-V Virtual Storage Device Read Bytes/second" ENABLED="True" CATEGORY="Hyper-V Virtual Storage Device" PRIMARYDATASOURCE="\Hyper-V Virtual Storage Device(*)\Read Bytes/sec" ID="{646c80bc-0380-4529-a45a-dd3ff2bec122}" FROMALLCOUNTERSTATS="False">
    <DESCRIPTION><![CDATA[This counter represents the total number of bytes that have been read per second on this virtual device.]]></DESCRIPTION>
    <DATASOURCE TYPE="CounterLog" NAME="\Hyper-V Virtual Storage Device(*)\Read Bytes/sec" COLLECTIONVARNAME="HyperVVirtualStorageDeviceReadBytessecALL" EXPRESSIONPATH="\Hyper-V Virtual Storage Device(*)\Read Bytes/sec" DATATYPE="integer" />
    <CHART CHARTTITLE="\Hyper-V Virtual Storage Device(*)\Read Bytes/sec" ISTHRESHOLDSADDED="False" DATASOURCE="\Hyper-V Virtual Storage Device(*)\Read Bytes/sec" CHARTLABELS="instance" />
  </ANALYSIS>
  <ANALYSIS NAME="Hyper-V Virtual Storage Device Write Bytes/Second" ENABLED="True" CATEGORY="Hyper-V Virtual Storage Device" PRIMARYDATASOURCE="\Hyper-V Virtual Storage Device(*)\Write Bytes/sec" ID="{086a7f84-f711-40eb-b0be-db49c3a93e02}" FROMALLCOUNTERSTATS="False">
    <DESCRIPTION><![CDATA[This counter represents the total number of bytes that have been written per second on this virtual device.]]></DESCRIPTION>
    <DATASOURCE TYPE="CounterLog" NAME="\Hyper-V Virtual Storage Device(*)\Write Bytes/sec" COLLECTIONVARNAME="HyperVVirtualStorageDeviceWriteBytessecALL" EXPRESSIONPATH="\Hyper-V Virtual Storage Device(*)\Write Bytes/sec" DATATYPE="integer" />
    <CHART CHARTTITLE="\Hyper-V Virtual Storage Device(*)\Write Bytes/sec" ISTHRESHOLDSADDED="False" DATASOURCE="\Hyper-V Virtual Storage Device(*)\Write Bytes/sec" CHARTLABELS="instance" />
  </ANALYSIS>
  <ANALYSIS NAME="Hyper-V Virtual Storage Device Error Count" ENABLED="True" CATEGORY="Hyper-V Virtual Storage Device" PRIMARYDATASOURCE="\Hyper-V Virtual Storage Device(*)\Error Count" ID="{c7b4a6ea-eac6-41b6-a8f7-aded2d5b9fdc}" FROMALLCOUNTERSTATS="False">
    <DESCRIPTION><![CDATA[This counter represents the total number of errors that have occured on this virtual device.]]></DESCRIPTION>
    <DATASOURCE TYPE="CounterLog" NAME="\Hyper-V Virtual Storage Device(*)\Error Count" COLLECTIONVARNAME="HyperVVirtualStorageDeviceErrorCountALL" EXPRESSIONPATH="\Hyper-V Virtual Storage Device(*)\Error Count" DATATYPE="integer" />
    <CHART CHARTTITLE="\Hyper-V Virtual Storage Device(*)\Error Count" ISTHRESHOLDSADDED="False" DATASOURCE="\Hyper-V Virtual Storage Device(*)\Error Count" CHARTLABELS="instance" />
    <THRESHOLD NAME="Greater than 1 error per second on this virtual storage device" CONDITION="Warning" COLOR="Yellow" PRIORITY="50">
      <DESCRIPTION><![CDATA[]]></DESCRIPTION>
      <CODE><![CDATA[StaticThreshold -CollectionOfCounterInstances $HyperVVirtualStorageDeviceErrorCountALL -Operator 'gt' -Threshold 1]]></CODE>
    </THRESHOLD>
  </ANALYSIS>
  <ANALYSIS NAME="Hyper-V Virtual Machine Health Summary Health Critical" ENABLED="True" CATEGORY="Hyper-V Virtual Machine Health Summary" PRIMARYDATASOURCE="\Hyper-V Virtual Machine Health Summary\Health Critical" ID="acb22c43-ea11-4f83-8406-366fb5260692" FROMALLCOUNTERSTATS="False">
    <DATASOURCE TYPE="CounterLog" NAME="\Hyper-V Virtual Machine Health Summary\Health Critical" COLLECTIONVARNAME="CollectionOfHyperVVirtualMachineHealthSummaryHealthCritical" EXPRESSIONPATH="\Hyper-V Virtual Machine Health Summary\Health Critical" TRENDVARNAME="TrendHyperVVirtualMachineHealthSummaryHealthCritical" DATATYPE="integer" />
    <CHART CHARTTITLE="\Hyper-V Virtual Machine Health Summary\Health Critical" ISTHRESHOLDSADDED="False" DATASOURCE="\Hyper-V Virtual Machine Health Summary\Health Critical" CHARTLABELS="instance" />
    <THRESHOLD NAME="Equal to or greater than 1 virtual machine is critical" CONDITION="Critical" COLOR="Red" PRIORITY="100">
      <DESCRIPTION><![CDATA[]]></DESCRIPTION>
      <CODE><![CDATA[StaticThreshold -CollectionOfCounterInstances $CollectionOfHyperVVirtualMachineHealthSummaryHealthCritical -Operator 'ge' -Threshold 1]]></CODE>
    </THRESHOLD>
    <DESCRIPTION><![CDATA[This counter represents the number of virtual machines that with critical health.]]></DESCRIPTION>
  </ANALYSIS>
  <ANALYSIS NAME="Hyper-V Hypervisor Logical Processors" ENABLED="True" CATEGORY="Hyper-V Hypervisor" PRIMARYDATASOURCE="\Hyper-V Hypervisor\Logical Processors" ID="4244e358-ce11-4617-ac81-95fb5ca30f3c" FROMALLCOUNTERSTATS="False">
    <DATASOURCE TYPE="CounterLog" NAME="\Hyper-V Hypervisor\Logical Processors" COLLECTIONVARNAME="CollectionOfHyperVHypervisorLogicalProcessors" EXPRESSIONPATH="\Hyper-V Hypervisor\Logical Processors" TRENDVARNAME="TrendHyperVHypervisorLogicalProcessors" DATATYPE="integer" />
    <CHART CHARTTITLE="\Hyper-V Hypervisor\Logical Processors" ISTHRESHOLDSADDED="False" DATASOURCE="\Hyper-V Hypervisor\Logical Processors" CHARTLABELS="instance" />
    <DESCRIPTION><![CDATA[The number of logical processors present in the system.]]></DESCRIPTION>
  </ANALYSIS>
  <ANALYSIS NAME="Hyper-V Hypervisor Virtual Processors" ENABLED="True" CATEGORY="Hyper-V Hypervisor" PRIMARYDATASOURCE="\Hyper-V Hypervisor\Virtual Processors" ID="476d76bf-ad1d-4a06-8dcb-28c93638fee5" FROMALLCOUNTERSTATS="False">
    <DATASOURCE TYPE="CounterLog" NAME="\Hyper-V Hypervisor\Virtual Processors" COLLECTIONVARNAME="CollectionOfHyperVHypervisorVirtualProcessors" EXPRESSIONPATH="\Hyper-V Hypervisor\Virtual Processors" TRENDVARNAME="TrendHyperVHypervisorVirtualProcessors" DATATYPE="integer" />
    <CHART CHARTTITLE="\Hyper-V Hypervisor\Virtual Processors" ISTHRESHOLDSADDED="False" DATASOURCE="\Hyper-V Hypervisor\Virtual Processors" CHARTLABELS="instance" />
    <DESCRIPTION><![CDATA[The number of virtual processors present in the system.]]></DESCRIPTION>
  </ANALYSIS>
  <ANALYSIS NAME="Hyper-V Hypervisor Root Partition Deposited Pages" ENABLED="True" CATEGORY="Hyper-V Hypervisor Root Partition" PRIMARYDATASOURCE="\Hyper-V Hypervisor Root Partition(*)\Deposited Pages" ID="878fcfe5-ec52-4205-a5d7-8b8f96e54b14" FROMALLCOUNTERSTATS="False">
    <DATASOURCE TYPE="CounterLog" NAME="\Hyper-V Hypervisor Root Partition(*)\Deposited Pages" COLLECTIONVARNAME="CollectionOfHyperVHypervisorRootPartitionDepositedPages" EXPRESSIONPATH="\Hyper-V Hypervisor Root Partition(*)\Deposited Pages" TRENDVARNAME="TrendHyperVHypervisorRootPartitionDepositedPages" DATATYPE="integer" />
    <CHART CHARTTITLE="\Hyper-V Hypervisor Root Partition(*)\Deposited Pages" ISTHRESHOLDSADDED="False" DATASOURCE="\Hyper-V Hypervisor Root Partition(*)\Deposited Pages" CHARTLABELS="instance" />
    <DESCRIPTION><![CDATA[The number of pages deposited into the partition.]]></DESCRIPTION>
  </ANALYSIS>
  <ANALYSIS NAME="Hyper-V VM Vid Partition Remote Physical Pages" ENABLED="True" CATEGORY="Hyper-V VM Vid Partition" PRIMARYDATASOURCE="\Hyper-V VM Vid Partition(*)\Remote Physical Pages" ID="d875913c-5a39-4add-80a6-01b0214a6173" FROMALLCOUNTERSTATS="False">
    <DATASOURCE TYPE="CounterLog" NAME="\Hyper-V VM Vid Partition(*)\Remote Physical Pages" COLLECTIONVARNAME="CollectionOfHyperVVMVidPartitionRemotePhysicalPages" EXPRESSIONPATH="\Hyper-V VM Vid Partition(*)\Remote Physical Pages" TRENDVARNAME="TrendHyperVVMVidPartitionRemotePhysicalPages" DATATYPE="integer" />
    <CHART CHARTTITLE="\Hyper-V VM Vid Partition(*)\Remote Physical Pages" ISTHRESHOLDSADDED="False" DATASOURCE="\Hyper-V VM Vid Partition(*)\Remote Physical Pages" CHARTLABELS="instance" />
    <THRESHOLD NAME="Virtual Machines are using memory from a remote NUMA Node" CONDITION="Critical" COLOR="Red" PRIORITY="100">
      <CODE><![CDATA[StaticThreshold -CollectionOfCounterInstances $CollectionOfHyperVVMVidPartitionRemotePhysicalPages -Operator 'gt' -Threshold 0]]></CODE>
    </THRESHOLD>
    <DESCRIPTION><![CDATA[The number of physical pages not allocated from the preferred NUMA node.]]></DESCRIPTION>
  </ANALYSIS>
  <ANALYSIS NAME="Hyper-V Virtual Storage Device Error Count" ENABLED="True" CATEGORY="Hyper-V Virtual Storage Device" PRIMARYDATASOURCE="\Hyper-V Virtual Storage Device(*)\Error Count" ID="a37ecd6a-25fc-42bf-9c4c-b34527ef6652" FROMALLCOUNTERSTATS="False">
    <DESCRIPTION><![CDATA[This counter represents the total number of errors that have occured on this virtual device.]]></DESCRIPTION>
    <DATASOURCE TYPE="CounterLog" NAME="\Hyper-V Virtual Storage Device(*)\Error Count" COLLECTIONVARNAME="CollectionOfHyperVVirtualStorageDeviceErrorCount" EXPRESSIONPATH="\Hyper-V Virtual Storage Device(*)\Error Count" TRENDVARNAME="TrendHyperVVirtualStorageDeviceErrorCount" DATATYPE="integer" />
    <CHART CHARTTITLE="\Hyper-V Virtual Storage Device(*)\Error Count" ISTHRESHOLDSADDED="False" DATASOURCE="\Hyper-V Virtual Storage Device(*)\Error Count" CHARTLABELS="instance" />
  </ANALYSIS>
  <ANALYSIS NAME="Hyper-V Virtual Storage Device Read Bytes/sec" ENABLED="True" CATEGORY="Hyper-V Virtual Storage Device" PRIMARYDATASOURCE="\Hyper-V Virtual Storage Device(*)\Read Bytes/sec" ID="4bed3124-9fec-41e8-b1c0-c23c9b3b5341" FROMALLCOUNTERSTATS="False">
    <DESCRIPTION><![CDATA[This counter represents the total number of bytes that have been read per second on this virtual device.]]></DESCRIPTION>
    <DATASOURCE TYPE="CounterLog" NAME="\Hyper-V Virtual Storage Device(*)\Read Bytes/sec" COLLECTIONVARNAME="CollectionOfHyperVVirtualStorageDeviceReadBytessec" EXPRESSIONPATH="\Hyper-V Virtual Storage Device(*)\Read Bytes/sec" TRENDVARNAME="TrendHyperVVirtualStorageDeviceReadBytessec" DATATYPE="integer" />
    <CHART CHARTTITLE="\Hyper-V Virtual Storage Device(*)\Read Bytes/sec" ISTHRESHOLDSADDED="False" DATASOURCE="\Hyper-V Virtual Storage Device(*)\Read Bytes/sec" CHARTLABELS="instance" />
  </ANALYSIS>
  <ANALYSIS NAME="Hyper-V Virtual Storage Device Write Bytes/sec" ENABLED="True" CATEGORY="Hyper-V Virtual Storage Device" PRIMARYDATASOURCE="\Hyper-V Virtual Storage Device(*)\Write Bytes/sec" ID="feefef43-21ea-46c1-86c1-d15f9cffc4e8" FROMALLCOUNTERSTATS="False">
    <DESCRIPTION><![CDATA[This counter represents the total number of bytes that have been written per second on this virtual device.]]></DESCRIPTION>
    <DATASOURCE TYPE="CounterLog" NAME="\Hyper-V Virtual Storage Device(*)\Write Bytes/sec" COLLECTIONVARNAME="CollectionOfHyperVVirtualStorageDeviceWriteBytessec" EXPRESSIONPATH="\Hyper-V Virtual Storage Device(*)\Write Bytes/sec" TRENDVARNAME="TrendHyperVVirtualStorageDeviceWriteBytessec" DATATYPE="integer" />
    <CHART CHARTTITLE="\Hyper-V Virtual Storage Device(*)\Write Bytes/sec" ISTHRESHOLDSADDED="False" DATASOURCE="\Hyper-V Virtual Storage Device(*)\Write Bytes/sec" CHARTLABELS="instance" />
  </ANALYSIS>
  <ANALYSIS NAME="Hyper-V VM Vid Numa Node ProcessorCount" ENABLED="True" CATEGORY="Hyper-V VM Vid Numa Node" PRIMARYDATASOURCE="\Hyper-V VM Vid Numa Node(*)\ProcessorCount" ID="bc5b10b1-e383-41e3-a558-b575c7032ef6" FROMALLCOUNTERSTATS="False">
    <DATASOURCE TYPE="CounterLog" NAME="\Hyper-V VM Vid Numa Node(*)\ProcessorCount" COLLECTIONVARNAME="CollectionOfHyperVVMVidNumaNodeProcessorCount" EXPRESSIONPATH="\Hyper-V VM Vid Numa Node(*)\ProcessorCount" TRENDVARNAME="TrendHyperVVMVidNumaNodeProcessorCount" DATATYPE="integer" />
    <CHART CHARTTITLE="\Hyper-V VM Vid Numa Node(*)\ProcessorCount" ISTHRESHOLDSADDED="False" DATASOURCE="\Hyper-V VM Vid Numa Node(*)\ProcessorCount" CHARTLABELS="instance" />
    <DESCRIPTION><![CDATA[The number of logical processors detected on this NUMA node.]]></DESCRIPTION>
  </ANALYSIS>
  <ANALYSIS NAME="Hyper-V VM Vid Partition Preferred NUMA Node Index" ENABLED="True" CATEGORY="Hyper-V VM Vid Partition" PRIMARYDATASOURCE="\Hyper-V VM Vid Partition(*)\Preferred NUMA Node Index" ID="cdeb61e7-e1ac-4188-8697-6f165c8704e8" FROMALLCOUNTERSTATS="False">
    <DATASOURCE TYPE="CounterLog" NAME="\Hyper-V VM Vid Partition(*)\Preferred NUMA Node Index" COLLECTIONVARNAME="CollectionOfHyperVVMVidPartitionPreferredNUMANodeIndex" EXPRESSIONPATH="\Hyper-V VM Vid Partition(*)\Preferred NUMA Node Index" TRENDVARNAME="TrendHyperVVMVidPartitionPreferredNUMANodeIndex" DATATYPE="integer" />
    <CHART CHARTTITLE="\Hyper-V VM Vid Partition(*)\Preferred NUMA Node Index" ISTHRESHOLDSADDED="False" DATASOURCE="\Hyper-V VM Vid Partition(*)\Preferred NUMA Node Index" CHARTLABELS="instance" />
    <DESCRIPTION><![CDATA[The preferred NUMA node index associated with this partition.]]></DESCRIPTION>
  </ANALYSIS>
  <ANALYSIS NAME="Hyper-V Hypervisor Root Virtual Processor Hypercalls Cost" ENABLED="True" CATEGORY="Hyper-V Hypervisor Root Virtual Processor" PRIMARYDATASOURCE="\Hyper-V Hypervisor Root Virtual Processor(*)\Hypercalls Cost" ID="be8357bc-6d03-42f1-8adf-8c61d2559a21" FROMALLCOUNTERSTATS="False">
    <DATASOURCE TYPE="CounterLog" NAME="\Hyper-V Hypervisor Root Virtual Processor(*)\Hypercalls Cost" COLLECTIONVARNAME="CollectionOfHyperVHypervisorRootVirtualProcessorHypercallsCost" EXPRESSIONPATH="\Hyper-V Hypervisor Root Virtual Processor(*)\Hypercalls Cost" TRENDVARNAME="TrendHyperVHypervisorRootVirtualProcessorHypercallsCost" DATATYPE="integer" />
    <CHART CHARTTITLE="\Hyper-V Hypervisor Root Virtual Processor(*)\Hypercalls Cost" ISTHRESHOLDSADDED="False" DATASOURCE="\Hyper-V Hypervisor Root Virtual Processor(*)\Hypercalls Cost" CHARTLABELS="instance" />
    <DESCRIPTION><![CDATA[The average time (in nanoseconds) spent processing a hypercall.]]></DESCRIPTION>
  </ANALYSIS>
  <ANALYSIS NAME="Hyper-V Hypervisor Root Virtual Processor IO Instructions Cost" ENABLED="True" CATEGORY="Hyper-V Hypervisor Root Virtual Processor" PRIMARYDATASOURCE="\Hyper-V Hypervisor Root Virtual Processor(_Total)\IO Instructions Cost" ID="8b1c0182-c56c-4869-a627-606cd0c12c96" FROMALLCOUNTERSTATS="False">
    <DATASOURCE TYPE="CounterLog" NAME="\Hyper-V Hypervisor Root Virtual Processor(*)\IO Instructions Cost" COLLECTIONVARNAME="CollectionOfHyperVHypervisorRootVirtualProcessorIOInstructionsCost" EXPRESSIONPATH="\Hyper-V Hypervisor Root Virtual Processor(*)\IO Instructions Cost" TRENDVARNAME="TrendHyperVHypervisorRootVirtualProcessorIOInstructionsCost" DATATYPE="integer" />
    <CHART CHARTTITLE="\Hyper-V Hypervisor Root Virtual Processor(*)\IO Instructions Cost" ISTHRESHOLDSADDED="False" DATASOURCE="\Hyper-V Hypervisor Root Virtual Processor(*)\IO Instructions Cost" CHARTLABELS="instance" />
    <DESCRIPTION><![CDATA[The average time (in nanoseconds) spent processing an IO instruction.]]></DESCRIPTION>
  </ANALYSIS>
  <ANALYSIS NAME="Hyper-V Hypervisor Partition Virtual TLB Flush Entires/sec" ENABLED="True" CATEGORY="Hyper-V Hypervisor Partition" PRIMARYDATASOURCE="\Hyper-V Hypervisor Partition(*)\Virtual TLB Flush Entires/sec" ID="0cdc6512-e3a7-4d12-bafc-32cb8dc6de43" FROMALLCOUNTERSTATS="False">
    <DATASOURCE TYPE="CounterLog" NAME="\Hyper-V Hypervisor Partition(*)\Virtual TLB Flush Entires/sec" COLLECTIONVARNAME="CollectionOfHyperVHypervisorPartitionVirtualTLBFlushEntiressec" EXPRESSIONPATH="\Hyper-V Hypervisor Partition(*)\Virtual TLB Flush Entires/sec" TRENDVARNAME="TrendHyperVHypervisorPartitionVirtualTLBFlushEntiressec" DATATYPE="integer" />
    <CHART CHARTTITLE="\Hyper-V Hypervisor Partition(*)\Virtual TLB Flush Entires/sec" ISTHRESHOLDSADDED="False" DATASOURCE="\Hyper-V Hypervisor Partition(*)\Virtual TLB Flush Entires/sec" CHARTLABELS="instance" />
    <DESCRIPTION><![CDATA[The rate of flushes of the entire virtual TLB.]]></DESCRIPTION>
  </ANALYSIS>
  <ANALYSIS NAME="Hyper-V Dynamic Memory VM Added Memory" ENABLED="True" CATEGORY="Hyper-V Dynamic Memory VM" PRIMARYDATASOURCE="\Hyper-V Dynamic Memory VM(*)\Added Memory" ID="915d255c-af23-43f5-9c05-9bcd63a1cd27" FROMALLCOUNTERSTATS="False">
    <DESCRIPTION><![CDATA[This counter represents the cummulative amount of memory added to the VM.]]></DESCRIPTION>
    <DATASOURCE TYPE="CounterLog" NAME="\Hyper-V Dynamic Memory VM(*)\Added Memory" COLLECTIONVARNAME="CollectionOfHyperVDynamicMemoryVMAddedMemory" EXPRESSIONPATH="\Hyper-V Dynamic Memory VM(*)\Added Memory" TRENDVARNAME="TrendHyperVDynamicMemoryVMAddedMemory" DATATYPE="integer" />
    <CHART CHARTTITLE="\Hyper-V Dynamic Memory VM(*)\Added Memory" ISTHRESHOLDSADDED="False" DATASOURCE="\Hyper-V Dynamic Memory VM(*)\Added Memory" CHARTLABELS="instance" />
  </ANALYSIS>
  <ANALYSIS NAME="Hyper-V Dynamic Memory VM Average Pressure" ENABLED="True" CATEGORY="Hyper-V Dynamic Memory VM" PRIMARYDATASOURCE="\Hyper-V Dynamic Memory VM(*)\Average Pressure" ID="d387842b-b49c-4d2e-83c7-901b6fbf1e0c" FROMALLCOUNTERSTATS="False">
    <DATASOURCE TYPE="CounterLog" NAME="\Hyper-V Dynamic Memory VM(*)\Average Pressure" COLLECTIONVARNAME="CollectionOfHyperVDynamicMemoryVMAveragePressure" EXPRESSIONPATH="\Hyper-V Dynamic Memory VM(*)\Average Pressure" TRENDVARNAME="TrendHyperVDynamicMemoryVMAveragePressure" DATATYPE="integer" />
    <CHART CHARTTITLE="\Hyper-V Dynamic Memory VM(*)\Average Pressure" ISTHRESHOLDSADDED="False" DATASOURCE="\Hyper-V Dynamic Memory VM(*)\Average Pressure" CHARTLABELS="instance" />
    <THRESHOLD NAME="Maximum assigned memory is not enough" CONDITION="Critical" COLOR="Red" PRIORITY="100">
      <CODE><![CDATA[
StaticThreshold -CollectionOfCounterInstances $CollectionOfHyperVDynamicMemoryVMAveragePressure -Operator 'gt' -Threshold 83      
         

]]></CODE>
    </THRESHOLD>
    <DESCRIPTION><![CDATA[This counter represents the average pressure in the VM.]]></DESCRIPTION>
  </ANALYSIS>
  <ANALYSIS NAME="Hyper-V Dynamic Memory VM Removed Memory" ENABLED="True" CATEGORY="Hyper-V Dynamic Memory VM" PRIMARYDATASOURCE="\Hyper-V Dynamic Memory VM(*)\Removed Memory" ID="c71891f2-6f7c-47dd-b286-91b7dca20e2e" FROMALLCOUNTERSTATS="False">
    <DESCRIPTION><![CDATA[This counter represents the cummulative amount of memory removed from the VM.]]></DESCRIPTION>
    <DATASOURCE TYPE="CounterLog" NAME="\Hyper-V Dynamic Memory VM(*)\Removed Memory" COLLECTIONVARNAME="CollectionOfHyperVDynamicMemoryVMRemovedMemory" EXPRESSIONPATH="\Hyper-V Dynamic Memory VM(*)\Removed Memory" TRENDVARNAME="TrendHyperVDynamicMemoryVMRemovedMemory" DATATYPE="integer" />
    <CHART CHARTTITLE="\Hyper-V Dynamic Memory VM(*)\Removed Memory" ISTHRESHOLDSADDED="False" DATASOURCE="\Hyper-V Dynamic Memory VM(*)\Removed Memory" CHARTLABELS="instance" />
  </ANALYSIS>
  <ANALYSIS NAME="Hyper-V Dynamic Memory Balancer Average Pressure" ENABLED="True" CATEGORY="Hyper-V Dynamic Memory Balancer" PRIMARYDATASOURCE="\Hyper-V Dynamic Memory Balancer(*)\Average Pressure" ID="ca7c6a6b-37d3-404e-98fc-4cef531c067c" FROMALLCOUNTERSTATS="False">
    <DATASOURCE TYPE="CounterLog" NAME="\Hyper-V Dynamic Memory Balancer(*)\Average Pressure" COLLECTIONVARNAME="CollectionOfHyperVDynamicMemoryBalancerAveragePressure" EXPRESSIONPATH="\Hyper-V Dynamic Memory Balancer(*)\Average Pressure" TRENDVARNAME="TrendHyperVDynamicMemoryBalancerAveragePressure" DATATYPE="integer" />
    <CHART CHARTTITLE="\Hyper-V Dynamic Memory Balancer(*)\Average Pressure" ISTHRESHOLDSADDED="False" DATASOURCE="\Hyper-V Dynamic Memory Balancer(*)\Average Pressure" CHARTLABELS="instance" />
    <THRESHOLD NAME="Virtual Machines are doing paging" CONDITION="Critical" COLOR="Red" PRIORITY="100">
      <CODE><![CDATA[StaticThreshold -CollectionOfCounterInstances $CollectionOfHyperVDynamicMemoryBalancerAveragePressure -Operator 'gt' -Threshold 83]]></CODE>
    </THRESHOLD>
    <DESCRIPTION><![CDATA[This counter represents the average pressure on the balancer node.]]></DESCRIPTION>
  </ANALYSIS>
  <ANALYSIS NAME="RemoteFX Root GPU Management Resources: VMs running RemoteFX" ENABLED="True" CATEGORY="RemoteFX Root GPU Management" PRIMARYDATASOURCE="\RemoteFX Root GPU Management(*)\Resources: VMs running RemoteFX" ID="382387be-0146-4efa-9533-027e194d875e" FROMALLCOUNTERSTATS="False">
    <DESCRIPTION><![CDATA[Count of virtual machines that have the RemoteFX 3D adapter installed.]]></DESCRIPTION>
    <DATASOURCE TYPE="CounterLog" NAME="\RemoteFX Root GPU Management(*)\Resources: VMs running RemoteFX" COLLECTIONVARNAME="CollectionOfRemoteFXRootGPUManagementResourcesVMsrunningRemoteFX" EXPRESSIONPATH="\RemoteFX Root GPU Management(*)\Resources: VMs running RemoteFX" TRENDVARNAME="TrendRemoteFXRootGPUManagementResourcesVMsrunningRemoteFX" DATATYPE="integer" />
    <CHART CHARTTITLE="\RemoteFX Root GPU Management(*)\Resources: VMs running RemoteFX" ISTHRESHOLDSADDED="False" DATASOURCE="\RemoteFX Root GPU Management(*)\Resources: VMs running RemoteFX" CHARTLABELS="instance" />
  </ANALYSIS>
  <ANALYSIS NAME="RemoteFX Root GPU Management VRAM: Available MB per GPU" ENABLED="True" CATEGORY="RemoteFX Root GPU Management" PRIMARYDATASOURCE="\RemoteFX Root GPU Management(*)\VRAM: Available MB per GPU" ID="0f3da5c1-c201-4df0-b78c-83eb41ee254e" FROMALLCOUNTERSTATS="False">
    <DATASOURCE TYPE="CounterLog" NAME="\RemoteFX Root GPU Management(*)\VRAM: Available MB per GPU" COLLECTIONVARNAME="CollectionOfRemoteFXRootGPUManagementVRAMAvailableMBperGPU" EXPRESSIONPATH="\RemoteFX Root GPU Management(*)\VRAM: Available MB per GPU" TRENDVARNAME="TrendRemoteFXRootGPUManagementVRAMAvailableMBperGPU" DATATYPE="integer" />
    <CHART CHARTTITLE="\RemoteFX Root GPU Management(*)\VRAM: Available MB per GPU" ISTHRESHOLDSADDED="False" DATASOURCE="\RemoteFX Root GPU Management(*)\VRAM: Available MB per GPU" CHARTLABELS="instance" />
    <DESCRIPTION><![CDATA[Amount of dedicated VRAM that is unused.]]></DESCRIPTION>
  </ANALYSIS>
  <ANALYSIS NAME="Hyper-V Hypervisor Root Partition Address Spaces" ENABLED="True" CATEGORY="Hyper-V Hypervisor Root Partition" PRIMARYDATASOURCE="\Hyper-V Hypervisor Root Partition(*)\Address Spaces" ID="8d431021-ff1d-4470-8cd3-ccb4df1333e3" FROMALLCOUNTERSTATS="False">
    <DATASOURCE TYPE="CounterLog" NAME="\Hyper-V Hypervisor Root Partition(*)\Address Spaces" COLLECTIONVARNAME="CollectionOfHyperVHypervisorRootPartitionAddressSpaces" EXPRESSIONPATH="\Hyper-V Hypervisor Root Partition(*)\Address Spaces" TRENDVARNAME="TrendHyperVHypervisorRootPartitionAddressSpaces" DATATYPE="integer" />
    <CHART CHARTTITLE="\Hyper-V Hypervisor Root Partition(*)\Address Spaces" ISTHRESHOLDSADDED="False" DATASOURCE="\Hyper-V Hypervisor Root Partition(*)\Address Spaces" CHARTLABELS="instance" />
    <THRESHOLD NAME="CPU SLAT compatiblity" CONDITION="Critical" COLOR="Red" PRIORITY="100">
      <CODE><![CDATA[
StaticThreshold -CollectionOfCounterInstances $CollectionOfHyperVHypervisorRootPartitionAddressSpaces -Operator 'gt' -Threshold 0

]]></CODE>
    </THRESHOLD>
    <DESCRIPTION><![CDATA[The number of address spaces in the virtual TLB of the partition. If this counter is 0 than your CPU is SLAT compatible]]></DESCRIPTION>
  </ANALYSIS>
  <ANALYSIS NAME="Hyper-V Hypervisor Logical Processor Context Switches/sec" ENABLED="True" CATEGORY="Hyper-V Hypervisor Logical Processor" PRIMARYDATASOURCE="\Hyper-V Hypervisor Logical Processor(*)\Context Switches/sec" ID="1fdf0791-5eba-4b35-936a-d7938388820f" FROMALLCOUNTERSTATS="False">
    <DATASOURCE TYPE="CounterLog" NAME="\Hyper-V Hypervisor Logical Processor(*)\Context Switches/sec" COLLECTIONVARNAME="CollectionOfHyperVHypervisorLogicalProcessorContextSwitchessec" EXPRESSIONPATH="\Hyper-V Hypervisor Logical Processor(*)\Context Switches/sec" TRENDVARNAME="TrendHyperVHypervisorLogicalProcessorContextSwitchessec" DATATYPE="integer" />
    <CHART CHARTTITLE="\Hyper-V Hypervisor Logical Processor(*)\Context Switches/sec" ISTHRESHOLDSADDED="False" DATASOURCE="\Hyper-V Hypervisor Logical Processor(*)\Context Switches/sec" CHARTLABELS="instance" />
    <THRESHOLD NAME="Value should be below 20.000 per logical processor" CONDITION="Warning" COLOR="Yellow" PRIORITY="50">
      <CODE><![CDATA[#// Use PowerShell code to create alerts when the conditions for this threshold are met.
#// Optionally use the variables listed above in the Variables list box.
#// If the condition for this threshold is a static value, then use the StaticThreshold() function.
#// Otherwise, you will need to manually loop through the counter instance collection object.
#// The counter instance collection object has a unique name for each counter data source in this analysis.
#// See the variables in the Variables list box above for more information on the counter instance collection object.

#// Here is a ready to use example on how to use the StaticThreshold() function to define a threshold:
StaticThreshold -CollectionOfCounterInstances $CollectionOfHyperVHypervisorLogicalProcessorContextSwitchessec -Operator 'gt' -Threshold 20000

#// The -Operator parameter accepts gt for greater than, ge for greater than or equal to, lt for less than,
#//  and le for less than or equal to. -Threshold is the static value for the threshold.]]></CODE>
    </THRESHOLD>
    <DESCRIPTION><![CDATA[The rate of virtual processor context switches on the processor.The collected value should be below 20.000 per logical processor.These are the number of times a new Virtual Processor (VP) had been scheduled to a particular Logical Processor (LP).   ]]></DESCRIPTION>
  </ANALYSIS>
  <ANALYSIS NAME="LogicalDisk Disk Transfers/sec" ENABLED="True" CATEGORY="LogicalDisk" PRIMARYDATASOURCE="\LogicalDisk(*)\Disk Transfers/sec" ID="aec8e6ed-5087-4028-a327-a6d16eefe422" FROMALLCOUNTERSTATS="False">
    <DESCRIPTION><![CDATA[Disk Transfers/sec is the rate of read and write operations on the disk. This counter is to messure the IOPs your logical disk have done.

A typical 7.200 rpm SATA disk can do ~75-100 IOPs.
A typical 10.000 rpm SATA disk can do ~125-150 IOPs.
A typical 15.000 rpm SAS disk can do ~175-210 IOPs.]]></DESCRIPTION>
    <DATASOURCE TYPE="CounterLog" NAME="\LogicalDisk(*)\Disk Transfers/sec" COLLECTIONVARNAME="CollectionOfLogicalDiskDiskTransferssec" EXPRESSIONPATH="\LogicalDisk(*)\Disk Transfers/sec" TRENDVARNAME="TrendLogicalDiskDiskTransferssec" DATATYPE="integer" />
    <CHART CHARTTITLE="\LogicalDisk(*)\Disk Transfers/sec" ISTHRESHOLDSADDED="False" DATASOURCE="\LogicalDisk(*)\Disk Transfers/sec" CHARTLABELS="instance" />
  </ANALYSIS>
  <ANALYSIS NAME="PhysicalDisk Disk Transfers/sec" ENABLED="True" CATEGORY="PhysicalDisk" PRIMARYDATASOURCE="\PhysicalDisk(*)\Disk Transfers/sec" ID="25c98b2b-7e15-437a-b845-99d5b91a5214" FROMALLCOUNTERSTATS="False">
    <DESCRIPTION><![CDATA[Disk Transfers/sec is the rate of read and write operations on the disk. This counter is to messure the IOPs your logical disk have done.

A typical 7.200 rpm SATA disk can do ~75-100 IOPs.
A typical 10.000 rpm SATA disk can do ~125-150 IOPs.
A typical 15.000 rpm SAS disk can do ~175-210 IOPs.]]></DESCRIPTION>
    <DATASOURCE TYPE="CounterLog" NAME="\PhysicalDisk(*)\Disk Transfers/sec" COLLECTIONVARNAME="CollectionOfPhysicalDiskDiskTransferssec" EXPRESSIONPATH="\PhysicalDisk(*)\Disk Transfers/sec" TRENDVARNAME="TrendPhysicalDiskDiskTransferssec" DATATYPE="integer" />
    <CHART CHARTTITLE="\PhysicalDisk(*)\Disk Transfers/sec" ISTHRESHOLDSADDED="False" DATASOURCE="\PhysicalDisk(*)\Disk Transfers/sec" CHARTLABELS="instance" />
  </ANALYSIS>
  <ANALYSIS NAME="Hyper-V Dynamic Memory VM Guest Visible Physical Memory" ENABLED="True" CATEGORY="Hyper-V Dynamic Memory VM" PRIMARYDATASOURCE="\Hyper-V Dynamic Memory VM(*)\Guest Visible Physical Memory" ID="c2a2973a-b680-4c31-b5d0-92d0ec06f537" FROMALLCOUNTERSTATS="False">
    <DATASOURCE TYPE="CounterLog" NAME="\Hyper-V Dynamic Memory VM(*)\Guest Visible Physical Memory" COLLECTIONVARNAME="CollectionOfHyperVDynamicMemoryVMGuestVisiblePhysicalMemory" EXPRESSIONPATH="\Hyper-V Dynamic Memory VM(*)\Guest Visible Physical Memory" TRENDVARNAME="TrendHyperVDynamicMemoryVMGuestVisiblePhysicalMemory" DATATYPE="integer" />
    <CHART CHARTTITLE="\Hyper-V Dynamic Memory VM(*)\Guest Visible Physical Memory" ISTHRESHOLDSADDED="False" DATASOURCE="\Hyper-V Dynamic Memory VM(*)\Guest Visible Physical Memory" CHARTLABELS="instance" />
    <DESCRIPTION><![CDATA[This counter represents the amount of memory visible in the VM.]]></DESCRIPTION>
  </ANALYSIS>
  <ANALYSIS NAME="Hyper-V Dynamic Memory VM Smart Paging Working Set Size" ENABLED="True" CATEGORY="Hyper-V Dynamic Memory VM" PRIMARYDATASOURCE="\Hyper-V Dynamic Memory VM(*)\Smart Paging Working Set Size" ID="103d2a20-4a6e-407b-9d55-67ad6727135c" FROMALLCOUNTERSTATS="False">
    <DATASOURCE TYPE="CounterLog" NAME="\Hyper-V Dynamic Memory VM(*)\Smart Paging Working Set Size" COLLECTIONVARNAME="CollectionOfHyperVDynamicMemoryVMSmartPagingWorkingSetSize" EXPRESSIONPATH="\Hyper-V Dynamic Memory VM(*)\Smart Paging Working Set Size" TRENDVARNAME="TrendHyperVDynamicMemoryVMSmartPagingWorkingSetSize" DATATYPE="integer" />
    <CHART CHARTTITLE="\Hyper-V Dynamic Memory VM(*)\Smart Paging Working Set Size" ISTHRESHOLDSADDED="False" DATASOURCE="\Hyper-V Dynamic Memory VM(*)\Smart Paging Working Set Size" CHARTLABELS="instance" />
    <THRESHOLD NAME="Hyper-V is doing Smart Paging" CONDITION="Warning" COLOR="Yellow" PRIORITY="50">
      <CODE><![CDATA[
StaticThreshold -CollectionOfCounterInstances $CollectionOfHyperVDynamicMemoryVMSmartPagingWorkingSetSize -Operator 'gt' -Threshold 0

#// The -Operator parameter accepts gt for greater than, ge for greater than or equal to, lt for less than,
#//  and le for less than or equal to. -Threshold is the static value for the threshold.]]></CODE>
    </THRESHOLD>
    <DESCRIPTION><![CDATA[Size of memory backed by Smart Paging in Mbytes.

To minimize the performance impact of Smart Paging, Hyper-V uses it only when all of the following occurs:
-The virtual machine is being restarted.
-There is no available physical memory.
- No memory can be reclaimed from other virtual machines running on the host.

]]></DESCRIPTION>
  </ANALYSIS>
  <ANALYSIS NAME="NUMA Node Memory Available MBytes" ENABLED="True" CATEGORY="NUMA Node Memory" PRIMARYDATASOURCE="\NUMA Node Memory(*)\Available MBytes" ID="c8c6f46e-b7c8-46bd-b943-07106e0ee724" FROMALLCOUNTERSTATS="False">
    <DESCRIPTION><![CDATA[Approximate amount of physical memory available for allocation for a NUMA node, in megabytes. Computed as the sum of memory on the zeroed, free, and standby lists for a NUMA node. This counter is available only on 64-bit systems.]]></DESCRIPTION>
    <DATASOURCE TYPE="CounterLog" NAME="\NUMA Node Memory(*)\Available MBytes" COLLECTIONVARNAME="CollectionOfNUMANodeMemoryAvailableMBytes" EXPRESSIONPATH="\NUMA Node Memory(*)\Available MBytes" TRENDVARNAME="TrendNUMANodeMemoryAvailableMBytes" DATATYPE="integer" />
    <CHART CHARTTITLE="\NUMA Node Memory(*)\Available MBytes" ISTHRESHOLDSADDED="False" DATASOURCE="\NUMA Node Memory(*)\Available MBytes" CHARTLABELS="instance" />
    <THRESHOLD NAME="A Numa Node has less than 1 GB available" CONDITION="Critical" COLOR="Red" PRIORITY="100">
      <CODE><![CDATA[#// Use PowerShell code to create alerts when the conditions for this threshold are met.
#// Optionally use the variables listed above in the Variables list box.
#// If the condition for this threshold is a static value, then use the StaticThreshold() function.
#// Otherwise, you will need to manually loop through the counter instance collection object.
#// The counter instance collection object has a unique name for each counter data source in this analysis.
#// See the variables in the Variables list box above for more information on the counter instance collection object.

#// Here is a ready to use example on how to use the StaticThreshold() function to define a threshold:
StaticThreshold -CollectionOfCounterInstances $CollectionOfNUMANodeMemoryAvailableMBytes -Operator 'lt' -Threshold 1024

#// The -Operator parameter accepts gt for greater than, ge for greater than or equal to, lt for less than,
#//  and le for less than or equal to. -Threshold is the static value for the threshold.]]></CODE>
    </THRESHOLD>
  </ANALYSIS>
  <ANALYSIS NAME="Hyper-V Virtual Switch Processor Number of VMQs" ENABLED="True" CATEGORY="Hyper-V Virtual Switch Processor" PRIMARYDATASOURCE="\Hyper-V Virtual Switch Processor(*)\Number of VMQs" ID="e2885bb3-24d8-4b95-bfe6-d0085f11a734" FROMALLCOUNTERSTATS="False">
    <DATASOURCE TYPE="CounterLog" NAME="\Hyper-V Virtual Switch Processor(*)\Number of VMQs" COLLECTIONVARNAME="CollectionOfHyperVVirtualSwitchProcessorNumberofVMQs" EXPRESSIONPATH="\Hyper-V Virtual Switch Processor(*)\Number of VMQs" TRENDVARNAME="TrendHyperVVirtualSwitchProcessorNumberofVMQs" DATATYPE="integer" />
    <CHART CHARTTITLE="\Hyper-V Virtual Switch Processor(*)\Number of VMQs" ISTHRESHOLDSADDED="False" DATASOURCE="\Hyper-V Virtual Switch Processor(*)\Number of VMQs" CHARTLABELS="instance" />
    <THRESHOLD NAME="VMQ is not enabled or network cards do not support VMQ" CONDITION="Warning" COLOR="Yellow" PRIORITY="50">
      <CODE><![CDATA[#// Use PowerShell code to create alerts when the conditions for this threshold are met.
#// Optionally use the variables listed above in the Variables list box.
#// If the condition for this threshold is a static value, then use the StaticThreshold() function.
#// Otherwise, you will need to manually loop through the counter instance collection object.
#// The counter instance collection object has a unique name for each counter data source in this analysis.
#// See the variables in the Variables list box above for more information on the counter instance collection object.

#// Here is a ready to use example on how to use the StaticThreshold() function to define a threshold:
StaticThreshold -CollectionOfCounterInstances $CollectionOfHyperVVirtualSwitchProcessorNumberofVMQs -Operator 'le' -Threshold 0

#// The -Operator parameter accepts gt for greater than, ge for greater than or equal to, lt for less than,
#//  and le for less than or equal to. -Threshold is the static value for the threshold.]]></CODE>
    </THRESHOLD>
    <DESCRIPTION><![CDATA[This counter represents the number of VMQs targeting on the virtual switch processor.]]></DESCRIPTION>
  </ANALYSIS>
  <ANALYSIS NAME="Cluster CSV Volume Cache Cache Size - Configured" ENABLED="True" CATEGORY="Cluster CSV Volume Cache" PRIMARYDATASOURCE="\Cluster CSV Volume Cache(*)\Cache Size - Configured" ID="fdd683f3-2938-48d1-abae-8ba9e19a2fe4" FROMALLCOUNTERSTATS="False">
    <DATASOURCE TYPE="CounterLog" NAME="\Cluster CSV Volume Cache(*)\Cache Size - Configured" COLLECTIONVARNAME="CollectionOfClusterCSVVolumeCacheCacheSizeConfigured" EXPRESSIONPATH="\Cluster CSV Volume Cache(*)\Cache Size - Configured" TRENDVARNAME="TrendClusterCSVVolumeCacheCacheSizeConfigured" DATATYPE="integer" />
    <CHART CHARTTITLE="\Cluster CSV Volume Cache(*)\Cache Size - Configured" ISTHRESHOLDSADDED="False" DATASOURCE="\Cluster CSV Volume Cache(*)\Cache Size - Configured" CHARTLABELS="instance" />
    <THRESHOLD NAME="CSV Cache not enabled" CONDITION="Warning" COLOR="Yellow" PRIORITY="50">
      <CODE><![CDATA[#// Use PowerShell code to create alerts when the conditions for this threshold are met.
#// Optionally use the variables listed above in the Variables list box.
#// If the condition for this threshold is a static value, then use the StaticThreshold() function.
#// Otherwise, you will need to manually loop through the counter instance collection object.
#// The counter instance collection object has a unique name for each counter data source in this analysis.
#// See the variables in the Variables list box above for more information on the counter instance collection object.

#// Here is a ready to use example on how to use the StaticThreshold() function to define a threshold:
StaticThreshold -CollectionOfCounterInstances $CollectionOfClusterCSVVolumeCacheCacheSizeConfigured -Operator 'le' -Threshold 0

#// The -Operator parameter accepts gt for greater than, ge for greater than or equal to, lt for less than,
#//  and le for less than or equal to. -Threshold is the static value for the threshold.]]></CODE>
    </THRESHOLD>
    <DESCRIPTION><![CDATA[The configured size of the CSV Cache if enabled.
If not read this blog to find out how to enable it
http://blogs.msdn.com/b/clustering/archive/2012/03/22/10286676.aspx]]></DESCRIPTION>
  </ANALYSIS>
  <ANALYSIS NAME="Cluster CSV Volume Cache Cache Size - Current" ENABLED="True" CATEGORY="Cluster CSV Volume Cache" PRIMARYDATASOURCE="\Cluster CSV Volume Cache(*)\Cache Size - Current" ID="4cbb7995-0dfb-49fd-ba9c-4af4178a99b8" FROMALLCOUNTERSTATS="False">
    <DATASOURCE TYPE="CounterLog" NAME="\Cluster CSV Volume Cache(*)\Cache Size - Current" COLLECTIONVARNAME="CollectionOfClusterCSVVolumeCacheCacheSizeCurrent" EXPRESSIONPATH="\Cluster CSV Volume Cache(*)\Cache Size - Current" TRENDVARNAME="TrendClusterCSVVolumeCacheCacheSizeCurrent" DATATYPE="integer" />
    <CHART CHARTTITLE="\Cluster CSV Volume Cache(*)\Cache Size - Current" ISTHRESHOLDSADDED="False" DATASOURCE="\Cluster CSV Volume Cache(*)\Cache Size - Current" CHARTLABELS="instance" />
    <THRESHOLD NAME="Check if CSV Cache is enabled" CONDITION="Warning" COLOR="Yellow" PRIORITY="50">
      <CODE><![CDATA[#// Use PowerShell code to create alerts when the conditions for this threshold are met.
#// Optionally use the variables listed above in the Variables list box.
#// If the condition for this threshold is a static value, then use the StaticThreshold() function.
#// Otherwise, you will need to manually loop through the counter instance collection object.
#// The counter instance collection object has a unique name for each counter data source in this analysis.
#// See the variables in the Variables list box above for more information on the counter instance collection object.

#// Here is a ready to use example on how to use the StaticThreshold() function to define a threshold:
StaticThreshold -CollectionOfCounterInstances $CollectionOfClusterCSVVolumeCacheCacheSizeCurrent -Operator 'le' -Threshold 0

#// The -Operator parameter accepts gt for greater than, ge for greater than or equal to, lt for less than,
#//  and le for less than or equal to. -Threshold is the static value for the threshold.]]></CODE>
    </THRESHOLD>
    <DESCRIPTION><![CDATA[The current size of the CSV Cache. If the value is 0 than CSV cache is not enabled or the CSV disk was not taken offline and online]]></DESCRIPTION>
  </ANALYSIS>
  <ANALYSIS NAME="Cluster CSV Volume Cache Cache IO Read - Bytes/sec" ENABLED="True" CATEGORY="Cluster CSV Volume Cache" PRIMARYDATASOURCE="\Cluster CSV Volume Cache(*)\Cache IO Read - Bytes/sec" ID="305591c5-2af1-4bc2-8819-6af5942ff9a8" FROMALLCOUNTERSTATS="False">
    <DATASOURCE TYPE="CounterLog" NAME="\Cluster CSV Volume Cache(*)\Cache IO Read - Bytes/sec" COLLECTIONVARNAME="CollectionOfClusterCSVVolumeCacheCacheIOReadBytessec" EXPRESSIONPATH="\Cluster CSV Volume Cache(*)\Cache IO Read - Bytes/sec" TRENDVARNAME="TrendClusterCSVVolumeCacheCacheIOReadBytessec" DATATYPE="integer" />
    <CHART CHARTTITLE="\Cluster CSV Volume Cache(*)\Cache IO Read - Bytes/sec" ISTHRESHOLDSADDED="False" DATASOURCE="\Cluster CSV Volume Cache(*)\Cache IO Read - Bytes/sec" CHARTLABELS="instance" />
    <DESCRIPTION><![CDATA[The rate at which bytes read from cache]]></DESCRIPTION>
  </ANALYSIS>
  <ANALYSIS NAME="Cluster CSV Volume Cache Disk IO Read - Bytes/Sec" ENABLED="True" CATEGORY="Cluster CSV Volume Cache" PRIMARYDATASOURCE="\Cluster CSV Volume Cache(*)\Disk IO Read - Bytes/Sec" ID="ba83798d-c79e-4e87-91af-5f8f894d0308" FROMALLCOUNTERSTATS="False">
    <DESCRIPTION><![CDATA[Number of new bytes read from Disk per sec.]]></DESCRIPTION>
    <DATASOURCE TYPE="CounterLog" NAME="\Cluster CSV Volume Cache(*)\Disk IO Read - Bytes/Sec" COLLECTIONVARNAME="CollectionOfClusterCSVVolumeCacheDiskIOReadBytesSec" EXPRESSIONPATH="\Cluster CSV Volume Cache(*)\Disk IO Read - Bytes/Sec" TRENDVARNAME="TrendClusterCSVVolumeCacheDiskIOReadBytesSec" DATATYPE="integer" />
    <CHART CHARTTITLE="\Cluster CSV Volume Cache(*)\Disk IO Read - Bytes/Sec" ISTHRESHOLDSADDED="False" DATASOURCE="\Cluster CSV Volume Cache(*)\Disk IO Read - Bytes/Sec" CHARTLABELS="instance" />
  </ANALYSIS>
  <ANALYSIS NAME="Hyper-V Replica VM Network Bytes Recv" ENABLED="True" CATEGORY="Hyper-V Replica VM" PRIMARYDATASOURCE="\Hyper-V Replica VM(*)\Network Bytes Recv" ID="8929617c-6591-43db-8ea3-d2fd7ea27e79" FROMALLCOUNTERSTATS="False">
    <DESCRIPTION><![CDATA[This counter represents the total bytes received over the network for the virtual machine since the virtual machine management service was started.]]></DESCRIPTION>
    <DATASOURCE TYPE="CounterLog" NAME="\Hyper-V Replica VM(*)\Network Bytes Recv" COLLECTIONVARNAME="CollectionOfHyperVReplicaVMNetworkBytesRecv" EXPRESSIONPATH="\Hyper-V Replica VM(*)\Network Bytes Recv" TRENDVARNAME="TrendHyperVReplicaVMNetworkBytesRecv" DATATYPE="integer" />
    <CHART CHARTTITLE="\Hyper-V Replica VM(*)\Network Bytes Recv" ISTHRESHOLDSADDED="False" DATASOURCE="\Hyper-V Replica VM(*)\Network Bytes Recv" CHARTLABELS="instance" />
  </ANALYSIS>
  <ANALYSIS NAME="Hyper-V Replica VM Network Bytes Sent" ENABLED="True" CATEGORY="Hyper-V Replica VM" PRIMARYDATASOURCE="\Hyper-V Replica VM(Hoster-Replica-Test)\Network Bytes Sent" ID="2a65c8b2-ee94-4c65-ab8e-500912e8b86b" FROMALLCOUNTERSTATS="False">
    <DATASOURCE TYPE="CounterLog" NAME="\Hyper-V Replica VM(Hoster-Replica-Test)\Network Bytes Sent" COLLECTIONVARNAME="CollectionOfHyperVReplicaVMNetworkBytesSent" EXPRESSIONPATH="\Hyper-V Replica VM(Hoster-Replica-Test)\Network Bytes Sent" TRENDVARNAME="TrendHyperVReplicaVMNetworkBytesSent" DATATYPE="integer" />
    <CHART CHARTTITLE="\Hyper-V Replica VM(Hoster-Replica-Test)\Network Bytes Sent" ISTHRESHOLDSADDED="False" DATASOURCE="\Hyper-V Replica VM(Hoster-Replica-Test)\Network Bytes Sent" CHARTLABELS="instance" />
    <DESCRIPTION><![CDATA[This counter represents the total bytes sent over the network for the virtual machine since the virtual machine management service was started.]]></DESCRIPTION>
  </ANALYSIS>
  <ANALYSIS NAME="Cluster CSV File System Redirected Read Bytes/sec" ENABLED="True" CATEGORY="Cluster CSV File System" PRIMARYDATASOURCE="\Cluster CSV File System(*)\Redirected Read Bytes/sec" ID="6876b1e4-88dc-41ba-90c5-078f83636f82" FROMALLCOUNTERSTATS="False">
    <DATASOURCE TYPE="CounterLog" NAME="\Cluster CSV File System(*)\Redirected Read Bytes/sec" COLLECTIONVARNAME="CollectionOfClusterCSVFileSystemRedirectedReadBytessec" EXPRESSIONPATH="\Cluster CSV File System(*)\Redirected Read Bytes/sec" TRENDVARNAME="TrendClusterCSVFileSystemRedirectedReadBytessec" DATATYPE="integer" />
    <CHART CHARTTITLE="\Cluster CSV File System(*)\Redirected Read Bytes/sec" ISTHRESHOLDSADDED="False" DATASOURCE="\Cluster CSV File System(*)\Redirected Read Bytes/sec" CHARTLABELS="instance" />
    <THRESHOLD NAME="CSV in redirected Mode?" CONDITION="Warning" COLOR="Yellow" PRIORITY="50">
      <CODE><![CDATA[#// Use PowerShell code to create alerts when the conditions for this threshold are met.
#// Optionally use the variables listed above in the Variables list box.
#// If the condition for this threshold is a static value, then use the StaticThreshold() function.
#// Otherwise, you will need to manually loop through the counter instance collection object.
#// The counter instance collection object has a unique name for each counter data source in this analysis.
#// See the variables in the Variables list box above for more information on the counter instance collection object.

#// Here is a ready to use example on how to use the StaticThreshold() function to define a threshold:
StaticThreshold -CollectionOfCounterInstances $CollectionOfClusterCSVFileSystemRedirectedReadBytessec -Operator 'gt' -Threshold 1000000

#// The -Operator parameter accepts gt for greater than, ge for greater than or equal to, lt for less than,
#//  and le for less than or equal to. -Threshold is the static value for the threshold.]]></CODE>
    </THRESHOLD>
    <DESCRIPTION><![CDATA[The rate at which read were redirected to the volume over the network.]]></DESCRIPTION>
  </ANALYSIS>
  <ANALYSIS NAME="Cluster CSV File System Redirected Write Bytes/sec" ENABLED="True" CATEGORY="Cluster CSV File System" PRIMARYDATASOURCE="\Cluster CSV File System(*)\Redirected Write Bytes/sec" ID="141c6e56-8cb1-483c-b75b-8e029f6b35af" FROMALLCOUNTERSTATS="False">
    <DATASOURCE TYPE="CounterLog" NAME="\Cluster CSV File System(*)\Redirected Write Bytes/sec" COLLECTIONVARNAME="CollectionOfClusterCSVFileSystemRedirectedWriteBytessec" EXPRESSIONPATH="\Cluster CSV File System(*)\Redirected Write Bytes/sec" TRENDVARNAME="TrendClusterCSVFileSystemRedirectedWriteBytessec" DATATYPE="integer" />
    <CHART CHARTTITLE="\Cluster CSV File System(*)\Redirected Write Bytes/sec" ISTHRESHOLDSADDED="False" DATASOURCE="\Cluster CSV File System(*)\Redirected Write Bytes/sec" CHARTLABELS="instance" />
    <DESCRIPTION><![CDATA[The rate at which bytes written were redirected to the volume over the network.]]></DESCRIPTION>
    <THRESHOLD NAME="CSV in redirected mode?" CONDITION="Warning" COLOR="Yellow" PRIORITY="50">
      <DESCRIPTION><![CDATA[]]></DESCRIPTION>
      <CODE><![CDATA[#// Use PowerShell code to create alerts when the conditions for this threshold are met.
#// Optionally use the variables listed above in the Variables list box.
#// If the condition for this threshold is a static value, then use the StaticThreshold() function.
#// Otherwise, you will need to manually loop through the counter instance collection object.
#// The counter instance collection object has a unique name for each counter data source in this analysis.
#// See the variables in the Variables list box above for more information on the counter instance collection object.

#// Here is a ready to use example on how to use the StaticThreshold() function to define a threshold:
StaticThreshold -CollectionOfCounterInstances $CollectionOfClusterCSVFileSystemRedirectedWriteBytessec -Operator 'gt' -Threshold 1000000

#// The -Operator parameter accepts gt for greater than, ge for greater than or equal to, lt for less than,
#//  and le for less than or equal to. -Threshold is the static value for the threshold.]]></CODE>
    </THRESHOLD>
  </ANALYSIS>
  <ANALYSIS NAME="Cluster CSV Volume Cache Cache State" ENABLED="True" CATEGORY="Cluster CSV Volume Cache" PRIMARYDATASOURCE="\Cluster CSV Volume Cache\Cache State" ID="fb09ebe9-22fc-49c0-88b9-4d51ce97dfa1" FROMALLCOUNTERSTATS="False">
    <DATASOURCE TYPE="CounterLog" NAME="\Cluster CSV Volume Cache\Cache State" COLLECTIONVARNAME="CollectionOfClusterCSVVolumeCacheCacheState" EXPRESSIONPATH="\Cluster CSV Volume Cache\Cache State" TRENDVARNAME="TrendClusterCSVVolumeCacheCacheState" DATATYPE="integer" />
    <CHART CHARTTITLE="\Cluster CSV Volume Cache\Cache State" ISTHRESHOLDSADDED="False" DATASOURCE="\Cluster CSV Volume Cache\Cache State" CHARTLABELS="instance" />
    <THRESHOLD NAME="CSV Volume Cache State" CONDITION="Warning" COLOR="Yellow" PRIORITY="50">
      <DESCRIPTION><![CDATA[]]></DESCRIPTION>
      <CODE><![CDATA[#// Use PowerShell code to create alerts when the conditions for this threshold are met.
#// Optionally use the variables listed above in the Variables list box.
#// If the condition for this threshold is a static value, then use the StaticThreshold() function.
#// Otherwise, you will need to manually loop through the counter instance collection object.
#// The counter instance collection object has a unique name for each counter data source in this analysis.
#// See the variables in the Variables list box above for more information on the counter instance collection object.

#// Here is a ready to use example on how to use the StaticThreshold() function to define a threshold:
StaticThreshold -CollectionOfCounterInstances $CollectionOfClusterCSVVolumeCacheCacheState -Operator 'ne' -Threshold 1

#// The -Operator parameter accepts gt for greater than, ge for greater than or equal to, lt for less than,
#//  and le for less than or equal to. -Threshold is the static value for the threshold.]]></CODE>
    </THRESHOLD>
    <DESCRIPTION><![CDATA[The current state of CSV Cache. 0=disabled, 1=enabled.]]></DESCRIPTION>
  </ANALYSIS>
  <ANALYSIS NAME="Cluster Resource Control Manager RHS Restarts" ENABLED="True" CATEGORY="Cluster Resource Control Manager" PRIMARYDATASOURCE="\Cluster Resource Control Manager\RHS Restarts" ID="27fef650-531a-46b1-a351-6be840c97ffe" FROMALLCOUNTERSTATS="False">
    <DATASOURCE TYPE="CounterLog" NAME="\Cluster Resource Control Manager\RHS Restarts" COLLECTIONVARNAME="CollectionOfClusterResourceControlManagerRHSRestarts" EXPRESSIONPATH="\Cluster Resource Control Manager\RHS Restarts" TRENDVARNAME="TrendClusterResourceControlManagerRHSRestarts" DATATYPE="integer" />
    <CHART CHARTTITLE="\Cluster Resource Control Manager\RHS Restarts" ISTHRESHOLDSADDED="False" DATASOURCE="\Cluster Resource Control Manager\RHS Restarts" CHARTLABELS="instance" />
    <THRESHOLD NAME="Cluster Resource Control Manager RHS Restarts &gt;1" CONDITION="Warning" COLOR="Yellow" PRIORITY="50">
      <CODE><![CDATA[#// Use PowerShell code to create alerts when the conditions for this threshold are met.
#// Optionally use the variables listed above in the Variables list box.
#// If the condition for this threshold is a static value, then use the StaticThreshold() function.
#// Otherwise, you will need to manually loop through the counter instance collection object.
#// The counter instance collection object has a unique name for each counter data source in this analysis.
#// See the variables in the Variables list box above for more information on the counter instance collection object.

#// Here is a ready to use example on how to use the StaticThreshold() function to define a threshold:
StaticThreshold -CollectionOfCounterInstances $CollectionOfClusterResourceControlManagerRHSRestarts -Operator 'gt' -Threshold 1

#// The -Operator parameter accepts gt for greater than, ge for greater than or equal to, lt for less than,
#//  and le for less than or equal to. -Threshold is the static value for the threshold.]]></CODE>
    </THRESHOLD>
    <THRESHOLD NAME="Cluster Resource Control Manager RHS Restarts &gt;10" CONDITION="Critical" COLOR="Red" PRIORITY="100">
      <CODE><![CDATA[#// Use PowerShell code to create alerts when the conditions for this threshold are met.
#// Optionally use the variables listed above in the Variables list box.
#// If the condition for this threshold is a static value, then use the StaticThreshold() function.
#// Otherwise, you will need to manually loop through the counter instance collection object.
#// The counter instance collection object has a unique name for each counter data source in this analysis.
#// See the variables in the Variables list box above for more information on the counter instance collection object.

#// Here is a ready to use example on how to use the StaticThreshold() function to define a threshold:
StaticThreshold -CollectionOfCounterInstances $CollectionOfClusterResourceControlManagerRHSRestarts -Operator 'gt' -Threshold 10

#// The -Operator parameter accepts gt for greater than, ge for greater than or equal to, lt for less than,
#//  and le for less than or equal to. -Threshold is the static value for the threshold.]]></CODE>
    </THRESHOLD>
    <DESCRIPTION><![CDATA[The RHS Restarts performance counter shows the number of resource host subsystem process (rhs.exe) restarts.]]></DESCRIPTION>
  </ANALYSIS>
  <ANALYSIS NAME="Cluster NetFt Heartbeats Missing heartbeats" ENABLED="True" CATEGORY="Cluster NetFt Heartbeats" PRIMARYDATASOURCE="\Cluster NetFt Heartbeats\Missing heartbeats" ID="42e23911-fa27-4ea5-b6e5-ae7c667da203" FROMALLCOUNTERSTATS="False">
    <DESCRIPTION><![CDATA[Number of missing heartbeats since the last heartbeat was received]]></DESCRIPTION>
    <DATASOURCE TYPE="CounterLog" NAME="\Cluster NetFt Heartbeats\Missing heartbeats" COLLECTIONVARNAME="CollectionOfClusterNetFtHeartbeatsMissingheartbeats" EXPRESSIONPATH="\Cluster NetFt Heartbeats\Missing heartbeats" TRENDVARNAME="TrendClusterNetFtHeartbeatsMissingheartbeats" DATATYPE="integer" />
    <CHART CHARTTITLE="\Cluster NetFt Heartbeats\Missing heartbeats" ISTHRESHOLDSADDED="False" DATASOURCE="\Cluster NetFt Heartbeats\Missing heartbeats" CHARTLABELS="instance" />
    <THRESHOLD NAME="Cluster NetFt Heartbeats Missing heartbeats &gt;1" CONDITION="Warning" COLOR="Yellow" PRIORITY="50">
      <DESCRIPTION><![CDATA[]]></DESCRIPTION>
      <CODE><![CDATA[#// Use PowerShell code to create alerts when the conditions for this threshold are met.
#// Optionally use the variables listed above in the Variables list box.
#// If the condition for this threshold is a static value, then use the StaticThreshold() function.
#// Otherwise, you will need to manually loop through the counter instance collection object.
#// The counter instance collection object has a unique name for each counter data source in this analysis.
#// See the variables in the Variables list box above for more information on the counter instance collection object.

#// Here is a ready to use example on how to use the StaticThreshold() function to define a threshold:
StaticThreshold -CollectionOfCounterInstances $CollectionOfClusterNetFtHeartbeatsMissingheartbeats -Operator 'gt' -Threshold 1

#// The -Operator parameter accepts gt for greater than, ge for greater than or equal to, lt for less than,
#//  and le for less than or equal to. -Threshold is the static value for the threshold.]]></CODE>
    </THRESHOLD>
    <THRESHOLD NAME="Cluster NetFt Heartbeats Missing heartbeats &gt;4" CONDITION="Critical" COLOR="Red" PRIORITY="100">
      <DESCRIPTION><![CDATA[]]></DESCRIPTION>
      <CODE><![CDATA[#// Use PowerShell code to create alerts when the conditions for this threshold are met.
#// Optionally use the variables listed above in the Variables list box.
#// If the condition for this threshold is a static value, then use the StaticThreshold() function.
#// Otherwise, you will need to manually loop through the counter instance collection object.
#// The counter instance collection object has a unique name for each counter data source in this analysis.
#// See the variables in the Variables list box above for more information on the counter instance collection object.

#// Here is a ready to use example on how to use the StaticThreshold() function to define a threshold:
StaticThreshold -CollectionOfCounterInstances $CollectionOfClusterNetFtHeartbeatsMissingheartbeats -Operator 'gt' -Threshold 4

#// The -Operator parameter accepts gt for greater than, ge for greater than or equal to, lt for less than,
#//  and le for less than or equal to. -Threshold is the static value for the threshold.]]></CODE>
    </THRESHOLD>
  </ANALYSIS>
  <ANALYSIS NAME="RDMA Completion Queue Errors" ENABLED="True" CATEGORY="RDMA Activity" PRIMARYDATASOURCE="\RDMA Activity(*)\RDMA Completion Queue Errors" ID="ccfd35ff-03b0-4e23-92aa-75f97d91ecfa" FROMALLCOUNTERSTATS="False">
    <DESCRIPTION><![CDATA[% C1 Time is the percentage of time the processor spends in the C1 low-power idle state. % C1 Time is a subset of the total processor idle time. C1 low-power idle state enables the processor to maintain its entire context and quickly return to the running state. Not all systems support the % C1 state.]]></DESCRIPTION>
    <DATASOURCE TYPE="CounterLog" NAME="\RDMA Activity(*)\RDMA Completion Queue Errors" COLLECTIONVARNAME="CollectionOfRDMAActivityRDMACompletionQueueErrors" EXPRESSIONPATH="\RDMA Activity(*)\RDMA Completion Queue Errors" TRENDVARNAME="TrendRDMAActivityRDMACompletionQueueErrors" DATATYPE="integer" />
    <CHART CHARTTITLE="\RDMA Activity(*)\RDMA Completion Queue Errors" ISTHRESHOLDSADDED="False" DATASOURCE="\RDMA Activity(*)\RDMA Completion Queue Errors" CHARTLABELS="instance" />
  </ANALYSIS>
  <ANALYSIS NAME="RDMA Connection Errors" ENABLED="True" CATEGORY="RDMA Activity" PRIMARYDATASOURCE="\RDMA Activity(*)\RDMA Connection Errors" ID="2c7ac333-14ce-4659-be1f-f6af6d4f96c7" FROMALLCOUNTERSTATS="False">
    <DESCRIPTION><![CDATA[]]></DESCRIPTION>
    <DATASOURCE TYPE="CounterLog" NAME="\RDMA Activity(*)\RDMA Connection Errors" COLLECTIONVARNAME="CollectionOfRDMAActivityRDMAConnectionErrors" EXPRESSIONPATH="\RDMA Activity(*)\RDMA Connection Errors" TRENDVARNAME="TrendRDMAActivityRDMAConnectionErrors" DATATYPE="integer" />
    <CHART CHARTTITLE="\RDMA Activity(*)\RDMA Connection Errors" ISTHRESHOLDSADDED="False" DATASOURCE="\RDMA Activity(*)\RDMA Connection Errors" CHARTLABELS="instance" />
  </ANALYSIS>
  <ANALYSIS NAME="RDMA Failed Connection Attempts" ENABLED="True" CATEGORY="RDMA Activity" PRIMARYDATASOURCE="\RDMA Activity(*)\RDMA Failed Connection Attempts" ID="392929f6-45a3-4685-9d5b-76c4d981e39b" FROMALLCOUNTERSTATS="False">
    <DESCRIPTION><![CDATA[]]></DESCRIPTION>
    <DATASOURCE TYPE="CounterLog" NAME="\RDMA Activity(*)\RDMA Failed Connection Attempts" COLLECTIONVARNAME="CollectionOfRDMAActivityRDMAFailedConnectionAttempts" EXPRESSIONPATH="\RDMA Activity(*)\RDMA Failed Connection Attempts" TRENDVARNAME="TrendRDMAActivityRDMAFailedConnectionAttempts" DATATYPE="integer" />
    <CHART CHARTTITLE="\RDMA Activity(*)\RDMA Failed Connection Attempts" ISTHRESHOLDSADDED="False" DATASOURCE="\RDMA Activity(*)\RDMA Failed Connection Attempts" CHARTLABELS="instance" />
  </ANALYSIS>
  <ANALYSIS NAME="Cluster CSV Block Redirection IO Reads/sec" ENABLED="True" CATEGORY="Cluster CSV Block Redirection" PRIMARYDATASOURCE="\Cluster CSV Block Redirection\IO Reads/sec" ID="221e8727-3d1d-4b8b-83d5-c2151c2d00c7" FROMALLCOUNTERSTATS="False">
    <DATASOURCE TYPE="CounterLog" NAME="\Cluster CSV Block Redirection\IO Reads/sec" COLLECTIONVARNAME="CollectionOfClusterCSVBlockRedirectionIOReadssec" EXPRESSIONPATH="\Cluster CSV Block Redirection\IO Reads/sec" TRENDVARNAME="TrendClusterCSVBlockRedirectionIOReadssec" DATATYPE="integer" />
    <CHART CHARTTITLE="\Cluster CSV Block Redirection\IO Reads/sec" ISTHRESHOLDSADDED="False" DATASOURCE="\Cluster CSV Block Redirection\IO Reads/sec" CHARTLABELS="instance" />
    <THRESHOLD NAME="Cluster CSV Block Redirection IO Reads sec &gt;1" CONDITION="Warning" COLOR="Yellow" PRIORITY="50">
      <DESCRIPTION><![CDATA[]]></DESCRIPTION>
      <CODE><![CDATA[#// Use PowerShell code to create alerts when the conditions for this threshold are met.
#// Optionally use the variables listed above in the Variables list box.
#// If the condition for this threshold is a static value, then use the StaticThreshold() function.
#// Otherwise, you will need to manually loop through the counter instance collection object.
#// The counter instance collection object has a unique name for each counter data source in this analysis.
#// See the variables in the Variables list box above for more information on the counter instance collection object.

#// Here is a ready to use example on how to use the StaticThreshold() function to define a threshold:
StaticThreshold -CollectionOfCounterInstances $CollectionOfClusterCSVBlockRedirectionIOReadssec -Operator 'gt' -Threshold 1

#// The -Operator parameter accepts gt for greater than, ge for greater than or equal to, lt for less than,
#//  and le for less than or equal to. -Threshold is the static value for the threshold.]]></CODE>
    </THRESHOLD>
    <DESCRIPTION><![CDATA[The rate at which new reads were performed.]]></DESCRIPTION>
  </ANALYSIS>
  <ANALYSIS NAME="Cluster CSV Block Redirection IO Writes/sec" ENABLED="True" CATEGORY="Cluster CSV Block Redirection" PRIMARYDATASOURCE="\Cluster CSV Block Redirection\IO Writes/sec" ID="16252b12-ae0e-468d-b501-f77f549bac14" FROMALLCOUNTERSTATS="False">
    <DESCRIPTION><![CDATA[The rate at which new writes were performed.]]></DESCRIPTION>
    <DATASOURCE TYPE="CounterLog" NAME="\Cluster CSV Block Redirection\IO Writes/sec" COLLECTIONVARNAME="CollectionOfClusterCSVBlockRedirectionIOWritessec" EXPRESSIONPATH="\Cluster CSV Block Redirection\IO Writes/sec" TRENDVARNAME="TrendClusterCSVBlockRedirectionIOWritessec" DATATYPE="integer" />
    <CHART CHARTTITLE="\Cluster CSV Block Redirection\IO Writes/sec" ISTHRESHOLDSADDED="False" DATASOURCE="\Cluster CSV Block Redirection\IO Writes/sec" CHARTLABELS="instance" />
    <THRESHOLD NAME="Cluster CSV Block Redirection IO Writes sec &gt;1" CONDITION="Warning" COLOR="Yellow" PRIORITY="50">
      <DESCRIPTION><![CDATA[]]></DESCRIPTION>
      <CODE><![CDATA[#// Use PowerShell code to create alerts when the conditions for this threshold are met.
#// Optionally use the variables listed above in the Variables list box.
#// If the condition for this threshold is a static value, then use the StaticThreshold() function.
#// Otherwise, you will need to manually loop through the counter instance collection object.
#// The counter instance collection object has a unique name for each counter data source in this analysis.
#// See the variables in the Variables list box above for more information on the counter instance collection object.

#// Here is a ready to use example on how to use the StaticThreshold() function to define a threshold:
StaticThreshold -CollectionOfCounterInstances $CollectionOfClusterCSVBlockRedirectionIOWritessec -Operator 'gt' -Threshold 1

#// The -Operator parameter accepts gt for greater than, ge for greater than or equal to, lt for less than,
#//  and le for less than or equal to. -Threshold is the static value for the threshold.]]></CODE>
    </THRESHOLD>
  </ANALYSIS>
  <ANALYSIS NAME="Cluster CSV Volume Manager Direct IO Failure Redirection/sec" ENABLED="True" CATEGORY="Cluster CSV Volume Manager" PRIMARYDATASOURCE="\Cluster CSV Volume Manager\Direct IO Failure Redirection/sec" ID="b392cf05-ff0b-4b8b-9a3f-65540b0156f0" FROMALLCOUNTERSTATS="False">
    <DESCRIPTION><![CDATA[Number of times/sec the IO was redirected over the network due to direct IO error.]]></DESCRIPTION>
    <DATASOURCE TYPE="CounterLog" NAME="\Cluster CSV Volume Manager\Direct IO Failure Redirection/sec" COLLECTIONVARNAME="CollectionOfClusterCSVVolumeManagerDirectIOFailureRedirectionsec" EXPRESSIONPATH="\Cluster CSV Volume Manager\Direct IO Failure Redirection/sec" TRENDVARNAME="TrendClusterCSVVolumeManagerDirectIOFailureRedirectionsec" DATATYPE="integer" />
    <CHART CHARTTITLE="\Cluster CSV Volume Manager\Direct IO Failure Redirection/sec" ISTHRESHOLDSADDED="False" DATASOURCE="\Cluster CSV Volume Manager\Direct IO Failure Redirection/sec" CHARTLABELS="instance" />
    <THRESHOLD NAME="Cluster CSV Volume Manager Direct IO Failure Redirection sec &gt;1" CONDITION="Warning" COLOR="Yellow" PRIORITY="50">
      <DESCRIPTION><![CDATA[]]></DESCRIPTION>
      <CODE><![CDATA[#// Use PowerShell code to create alerts when the conditions for this threshold are met.
#// Optionally use the variables listed above in the Variables list box.
#// If the condition for this threshold is a static value, then use the StaticThreshold() function.
#// Otherwise, you will need to manually loop through the counter instance collection object.
#// The counter instance collection object has a unique name for each counter data source in this analysis.
#// See the variables in the Variables list box above for more information on the counter instance collection object.

#// Here is a ready to use example on how to use the StaticThreshold() function to define a threshold:
StaticThreshold -CollectionOfCounterInstances $CollectionOfClusterCSVVolumeManagerDirectIOFailureRedirectionsec -Operator 'gt' -Threshold 1

#// The -Operator parameter accepts gt for greater than, ge for greater than or equal to, lt for less than,
#//  and le for less than or equal to. -Threshold is the static value for the threshold.]]></CODE>
    </THRESHOLD>
    <THRESHOLD NAME="Cluster CSV Volume Manager Direct IO Failure Redirection sec &gt;100" CONDITION="Critical" COLOR="Red" PRIORITY="100">
      <DESCRIPTION><![CDATA[]]></DESCRIPTION>
      <CODE><![CDATA[#// Use PowerShell code to create alerts when the conditions for this threshold are met.
#// Optionally use the variables listed above in the Variables list box.
#// If the condition for this threshold is a static value, then use the StaticThreshold() function.
#// Otherwise, you will need to manually loop through the counter instance collection object.
#// The counter instance collection object has a unique name for each counter data source in this analysis.
#// See the variables in the Variables list box above for more information on the counter instance collection object.

#// Here is a ready to use example on how to use the StaticThreshold() function to define a threshold:
StaticThreshold -CollectionOfCounterInstances $CollectionOfClusterCSVVolumeManagerDirectIOFailureRedirectionsec -Operator 'gt' -Threshold 100

#// The -Operator parameter accepts gt for greater than, ge for greater than or equal to, lt for less than,
#//  and le for less than or equal to. -Threshold is the static value for the threshold.]]></CODE>
    </THRESHOLD>
  </ANALYSIS>
  <ANALYSIS NAME="RemoteFX Network Loss Rate" ENABLED="True" CATEGORY="RemoteFX Network" PRIMARYDATASOURCE="\RemoteFX Network(*)\Loss Rate" ID="ced92b29-51cc-45b8-a753-0b9d1af965ae" FROMALLCOUNTERSTATS="False">
    <DESCRIPTION><![CDATA[Loss percentage]]></DESCRIPTION>
    <DATASOURCE TYPE="CounterLog" NAME="\RemoteFX Network(*)\Loss Rate" COLLECTIONVARNAME="CollectionOfRemoteFXNetworkLossRate" EXPRESSIONPATH="\RemoteFX Network(*)\Loss Rate" TRENDVARNAME="TrendRemoteFXNetworkLossRate" DATATYPE="integer" />
    <CHART CHARTTITLE="\RemoteFX Network(*)\Loss Rate" ISTHRESHOLDSADDED="False" DATASOURCE="\RemoteFX Network(*)\Loss Rate" CHARTLABELS="instance" />
    <THRESHOLD NAME="RemoteFX Network Loss Rate &gt;5%" CONDITION="Warning" COLOR="Yellow" PRIORITY="50">
      <DESCRIPTION><![CDATA[]]></DESCRIPTION>
      <CODE><![CDATA[#// Use PowerShell code to create alerts when the conditions for this threshold are met.
#// Optionally use the variables listed above in the Variables list box.
#// If the condition for this threshold is a static value, then use the StaticThreshold() function.
#// Otherwise, you will need to manually loop through the counter instance collection object.
#// The counter instance collection object has a unique name for each counter data source in this analysis.
#// See the variables in the Variables list box above for more information on the counter instance collection object.

#// Here is a ready to use example on how to use the StaticThreshold() function to define a threshold:
StaticThreshold -CollectionOfCounterInstances $CollectionOfRemoteFXNetworkLossRate -Operator 'gt' -Threshold 5

#// The -Operator parameter accepts gt for greater than, ge for greater than or equal to, lt for less than,
#//  and le for less than or equal to. -Threshold is the static value for the threshold.]]></CODE>
    </THRESHOLD>
    <THRESHOLD NAME="RemoteFX Network Loss Rate &gt;10%" CONDITION="Critical" COLOR="Red" PRIORITY="100">
      <DESCRIPTION><![CDATA[]]></DESCRIPTION>
      <CODE><![CDATA[#// Use PowerShell code to create alerts when the conditions for this threshold are met.
#// Optionally use the variables listed above in the Variables list box.
#// If the condition for this threshold is a static value, then use the StaticThreshold() function.
#// Otherwise, you will need to manually loop through the counter instance collection object.
#// The counter instance collection object has a unique name for each counter data source in this analysis.
#// See the variables in the Variables list box above for more information on the counter instance collection object.

#// Here is a ready to use example on how to use the StaticThreshold() function to define a threshold:
StaticThreshold -CollectionOfCounterInstances $CollectionOfRemoteFXNetworkLossRate -Operator 'gt' -Threshold 10

#// The -Operator parameter accepts gt for greater than, ge for greater than or equal to, lt for less than,
#//  and le for less than or equal to. -Threshold is the static value for the threshold.]]></CODE>
    </THRESHOLD>
  </ANALYSIS>
  <ANALYSIS NAME="Hyper-V Virtual Machine Bus Throttle Events" ENABLED="True" CATEGORY="Hyper-V Virtual Machine Bus" PRIMARYDATASOURCE="\Hyper-V Virtual Machine Bus\Throttle Events" ID="b0db6ee1-b22d-42e1-a951-fb7400ec2c5c" FROMALLCOUNTERSTATS="False">
    <DESCRIPTION><![CDATA[This counter represents the total number of times that any partition has been throttled, which is to say that its interrupts were disabled.]]></DESCRIPTION>
    <DATASOURCE TYPE="CounterLog" NAME="\Hyper-V Virtual Machine Bus\Throttle Events" COLLECTIONVARNAME="CollectionOfHyperVVirtualMachineBusThrottleEvents" EXPRESSIONPATH="\Hyper-V Virtual Machine Bus\Throttle Events" TRENDVARNAME="TrendHyperVVirtualMachineBusThrottleEvents" DATATYPE="integer" />
    <CHART CHARTTITLE="\Hyper-V Virtual Machine Bus\Throttle Events" ISTHRESHOLDSADDED="False" DATASOURCE="\Hyper-V Virtual Machine Bus\Throttle Events" CHARTLABELS="instance" />
    <THRESHOLD NAME="HyperV Virtual Machine Bus Throttle Events &gt;1" CONDITION="Warning" COLOR="Yellow" PRIORITY="50">
      <DESCRIPTION><![CDATA[]]></DESCRIPTION>
      <CODE><![CDATA[#// Use PowerShell code to create alerts when the conditions for this threshold are met.
#// Optionally use the variables listed above in the Variables list box.
#// If the condition for this threshold is a static value, then use the StaticThreshold() function.
#// Otherwise, you will need to manually loop through the counter instance collection object.
#// The counter instance collection object has a unique name for each counter data source in this analysis.
#// See the variables in the Variables list box above for more information on the counter instance collection object.

#// Here is a ready to use example on how to use the StaticThreshold() function to define a threshold:
StaticThreshold -CollectionOfCounterInstances $CollectionOfHyperVVirtualMachineBusThrottleEvents -Operator 'gt' -Threshold 1

#// The -Operator parameter accepts gt for greater than, ge for greater than or equal to, lt for less than,
#//  and le for less than or equal to. -Threshold is the static value for the threshold.]]></CODE>
    </THRESHOLD>
    <THRESHOLD NAME="HyperV Virtual Machine Bus Throttle Events &gt;10" CONDITION="Critical" COLOR="Red" PRIORITY="100">
      <DESCRIPTION><![CDATA[]]></DESCRIPTION>
      <CODE><![CDATA[#// Use PowerShell code to create alerts when the conditions for this threshold are met.
#// Optionally use the variables listed above in the Variables list box.
#// If the condition for this threshold is a static value, then use the StaticThreshold() function.
#// Otherwise, you will need to manually loop through the counter instance collection object.
#// The counter instance collection object has a unique name for each counter data source in this analysis.
#// See the variables in the Variables list box above for more information on the counter instance collection object.

#// Here is a ready to use example on how to use the StaticThreshold() function to define a threshold:
StaticThreshold -CollectionOfCounterInstances $CollectionOfHyperVVirtualMachineBusThrottleEvents -Operator 'gt' -Threshold 10

#// The -Operator parameter accepts gt for greater than, ge for greater than or equal to, lt for less than,
#//  and le for less than or equal to. -Threshold is the static value for the threshold.]]></CODE>
    </THRESHOLD>
  </ANALYSIS>
  <ANALYSIS NAME="Hyper-V Legacy Network Adapter Frames Dropped" ENABLED="True" CATEGORY="Hyper-V Legacy Network Adapter" PRIMARYDATASOURCE="\Hyper-V Legacy Network Adapter(*)\Frames Dropped" ID="5aadb70c-c719-4cef-86d8-8a6c4ed4ca4d" FROMALLCOUNTERSTATS="False">
    <DESCRIPTION><![CDATA[Frames Dropped is the number of frames dropped on the network adapter.]]></DESCRIPTION>
    <DATASOURCE TYPE="CounterLog" NAME="\Hyper-V Legacy Network Adapter(*)\Frames Dropped" COLLECTIONVARNAME="CollectionOfHyperVLegacyNetworkAdapterFramesDropped" EXPRESSIONPATH="\Hyper-V Legacy Network Adapter(*)\Frames Dropped" TRENDVARNAME="TrendHyperVLegacyNetworkAdapterFramesDropped" DATATYPE="integer" />
    <CHART CHARTTITLE="\Hyper-V Legacy Network Adapter(*)\Frames Dropped" ISTHRESHOLDSADDED="False" DATASOURCE="\Hyper-V Legacy Network Adapter(*)\Frames Dropped" CHARTLABELS="instance" />
    <THRESHOLD NAME="HyperV Legacy Network Adapter Frames Dropped &gt;100" CONDITION="Warning" COLOR="Yellow" PRIORITY="50">
      <DESCRIPTION><![CDATA[]]></DESCRIPTION>
      <CODE><![CDATA[#// Use PowerShell code to create alerts when the conditions for this threshold are met.
#// Optionally use the variables listed above in the Variables list box.
#// If the condition for this threshold is a static value, then use the StaticThreshold() function.
#// Otherwise, you will need to manually loop through the counter instance collection object.
#// The counter instance collection object has a unique name for each counter data source in this analysis.
#// See the variables in the Variables list box above for more information on the counter instance collection object.

#// Here is a ready to use example on how to use the StaticThreshold() function to define a threshold:
StaticThreshold -CollectionOfCounterInstances $CollectionOfHyperVLegacyNetworkAdapterFramesDropped -Operator 'gt' -Threshold 100

#// The -Operator parameter accepts gt for greater than, ge for greater than or equal to, lt for less than,
#//  and le for less than or equal to. -Threshold is the static value for the threshold.]]></CODE>
    </THRESHOLD>
    <THRESHOLD NAME="HyperV Legacy Network Adapter Frames Dropped &gt;1000" CONDITION="Critical" COLOR="Red" PRIORITY="100">
      <DESCRIPTION><![CDATA[]]></DESCRIPTION>
      <CODE><![CDATA[#// Use PowerShell code to create alerts when the conditions for this threshold are met.
#// Optionally use the variables listed above in the Variables list box.
#// If the condition for this threshold is a static value, then use the StaticThreshold() function.
#// Otherwise, you will need to manually loop through the counter instance collection object.
#// The counter instance collection object has a unique name for each counter data source in this analysis.
#// See the variables in the Variables list box above for more information on the counter instance collection object.

#// Here is a ready to use example on how to use the StaticThreshold() function to define a threshold:
StaticThreshold -CollectionOfCounterInstances $CollectionOfHyperVLegacyNetworkAdapterFramesDropped -Operator 'gt' -Threshold 1000

#// The -Operator parameter accepts gt for greater than, ge for greater than or equal to, lt for less than,
#//  and le for less than or equal to. -Threshold is the static value for the threshold.]]></CODE>
    </THRESHOLD>
  </ANALYSIS>
  <ANALYSIS NAME="Hyper-V Legacy Network Adapter Bytes Dropped" ENABLED="True" CATEGORY="Hyper-V Legacy Network Adapter" PRIMARYDATASOURCE="\Hyper-V Legacy Network Adapter(*)\Bytes Dropped" ID="987c6014-cf5d-4bba-848d-b5c8b4fe6794" FROMALLCOUNTERSTATS="False">
    <DATASOURCE TYPE="CounterLog" NAME="\Hyper-V Legacy Network Adapter(*)\Bytes Dropped" COLLECTIONVARNAME="CollectionOfHyperVLegacyNetworkAdapterBytesDropped" EXPRESSIONPATH="\Hyper-V Legacy Network Adapter(*)\Bytes Dropped" TRENDVARNAME="TrendHyperVLegacyNetworkAdapterBytesDropped" DATATYPE="integer" />
    <CHART CHARTTITLE="\Hyper-V Legacy Network Adapter(*)\Bytes Dropped" ISTHRESHOLDSADDED="False" DATASOURCE="\Hyper-V Legacy Network Adapter(*)\Bytes Dropped" CHARTLABELS="instance" />
    <THRESHOLD NAME="HyperV Legacy Network Adapter Bytes Dropped &gt;1MBs" CONDITION="Warning" COLOR="Yellow" PRIORITY="50">
      <CODE><![CDATA[#// Use PowerShell code to create alerts when the conditions for this threshold are met.
#// Optionally use the variables listed above in the Variables list box.
#// If the condition for this threshold is a static value, then use the StaticThreshold() function.
#// Otherwise, you will need to manually loop through the counter instance collection object.
#// The counter instance collection object has a unique name for each counter data source in this analysis.
#// See the variables in the Variables list box above for more information on the counter instance collection object.

#// Here is a ready to use example on how to use the StaticThreshold() function to define a threshold:
StaticThreshold -CollectionOfCounterInstances $CollectionOfHyperVLegacyNetworkAdapterBytesDropped -Operator 'gt' -Threshold 1000000

#// The -Operator parameter accepts gt for greater than, ge for greater than or equal to, lt for less than,
#//  and le for less than or equal to. -Threshold is the static value for the threshold.]]></CODE>
    </THRESHOLD>
    <THRESHOLD NAME="HyperV Legacy Network Adapter Bytes Dropped &gt;100MBs" CONDITION="Critical" COLOR="Red" PRIORITY="100">
      <DESCRIPTION><![CDATA[]]></DESCRIPTION>
      <CODE><![CDATA[#// Use PowerShell code to create alerts when the conditions for this threshold are met.
#// Optionally use the variables listed above in the Variables list box.
#// If the condition for this threshold is a static value, then use the StaticThreshold() function.
#// Otherwise, you will need to manually loop through the counter instance collection object.
#// The counter instance collection object has a unique name for each counter data source in this analysis.
#// See the variables in the Variables list box above for more information on the counter instance collection object.

#// Here is a ready to use example on how to use the StaticThreshold() function to define a threshold:
StaticThreshold -CollectionOfCounterInstances $CollectionOfHyperVLegacyNetworkAdapterBytesDropped -Operator 'gt' -Threshold 100000000

#// The -Operator parameter accepts gt for greater than, ge for greater than or equal to, lt for less than,
#//  and le for less than or equal to. -Threshold is the static value for the threshold.]]></CODE>
    </THRESHOLD>
    <DESCRIPTION><![CDATA[Bytes Dropped is the number of bytes dropped on the network adapter.]]></DESCRIPTION>
  </ANALYSIS>
  <ANALYSIS NAME="Cluster CSV File System Volume State" ENABLED="True" CATEGORY="Cluster CSV File System" PRIMARYDATASOURCE="\Cluster CSV File System\Volume State" ID="b22bd8f7-ecba-472a-9253-219de26dfe70" FROMALLCOUNTERSTATS="False">
    <DESCRIPTION><![CDATA[State of the volume. Volume can be in one of the following states. 0 - Init state. In that state all files are invalidated and all IOs except volume level IOs are failing. 1 - Paused state. In this state volume will pause any new IO and down-level state is cleaned. 2 - Draining state. In this state volume will pause any new IO, but down-level files are still opened and some down-level IOs might be still in process. 3 - Set down level state. In this state volume will pause any new IO. The down-level state is already reapplied. 4 - Active state. In this state all IO are proceeding as normal.]]></DESCRIPTION>
    <DATASOURCE TYPE="CounterLog" NAME="\Cluster CSV File System\Volume State" COLLECTIONVARNAME="CollectionOfClusterCSVFileSystemVolumeState" EXPRESSIONPATH="\Cluster CSV File System\Volume State" TRENDVARNAME="TrendClusterCSVFileSystemVolumeState" DATATYPE="integer" />
    <CHART CHARTTITLE="\Cluster CSV File System\Volume State" ISTHRESHOLDSADDED="False" DATASOURCE="\Cluster CSV File System\Volume State" CHARTLABELS="instance" />
    <THRESHOLD NAME="Cluster CSV FileSystem Volume State &lt;&gt;4" CONDITION="Warning" COLOR="Yellow" PRIORITY="50">
      <DESCRIPTION><![CDATA[]]></DESCRIPTION>
      <CODE><![CDATA[#// Use PowerShell code to create alerts when the conditions for this threshold are met.
#// Optionally use the variables listed above in the Variables list box.
#// If the condition for this threshold is a static value, then use the StaticThreshold() function.
#// Otherwise, you will need to manually loop through the counter instance collection object.
#// The counter instance collection object has a unique name for each counter data source in this analysis.
#// See the variables in the Variables list box above for more information on the counter instance collection object.

#// Here is a ready to use example on how to use the StaticThreshold() function to define a threshold:
StaticThreshold -CollectionOfCounterInstances $CollectionOfClusterCSVFileSystemVolumeState -Operator 'ne' -Threshold 4

#// The -Operator parameter accepts gt for greater than, ge for greater than or equal to, lt for less than,
#//  and le for less than or equal to. -Threshold is the static value for the threshold.]]></CODE>
    </THRESHOLD>
    <THRESHOLD NAME="Cluster CSV FileSystem Volume State =3" CONDITION="Critical" COLOR="Red" PRIORITY="100">
      <DESCRIPTION><![CDATA[]]></DESCRIPTION>
      <CODE><![CDATA[#// Use PowerShell code to create alerts when the conditions for this threshold are met.
#// Optionally use the variables listed above in the Variables list box.
#// If the condition for this threshold is a static value, then use the StaticThreshold() function.
#// Otherwise, you will need to manually loop through the counter instance collection object.
#// The counter instance collection object has a unique name for each counter data source in this analysis.
#// See the variables in the Variables list box above for more information on the counter instance collection object.

#// Here is a ready to use example on how to use the StaticThreshold() function to define a threshold:
StaticThreshold -CollectionOfCounterInstances $CollectionOfClusterCSVFileSystemVolumeState -Operator 'eq' -Threshold 3

#// The -Operator parameter accepts gt for greater than, ge for greater than or equal to, lt for less than,
#//  and le for less than or equal to. -Threshold is the static value for the threshold.]]></CODE>
    </THRESHOLD>
  </ANALYSIS>
  <ANALYSIS NAME="Hyper-V Replica VM Compression Efficiency" ENABLED="True" CATEGORY="Hyper-V Replica VM" PRIMARYDATASOURCE="\Hyper-V Replica VM\Compression Efficiency" ID="ea83b19c-e443-49e9-9e43-feb0665ff4e1" FROMALLCOUNTERSTATS="False">
    <DATASOURCE TYPE="CounterLog" NAME="\Hyper-V Replica VM\Compression Efficiency" COLLECTIONVARNAME="CollectionOfHyperVReplicaVMCompressionEfficiency" EXPRESSIONPATH="\Hyper-V Replica VM\Compression Efficiency" TRENDVARNAME="TrendHyperVReplicaVMCompressionEfficiency" DATATYPE="integer" />
    <CHART CHARTTITLE="\Hyper-V Replica VM\Compression Efficiency" ISTHRESHOLDSADDED="False" DATASOURCE="\Hyper-V Replica VM\Compression Efficiency" CHARTLABELS="instance" />
    <DESCRIPTION><![CDATA[This counter represents the compression efficiency for the files that has been transferred over the network.]]></DESCRIPTION>
  </ANALYSIS>
  <INHERITANCE FILEPATH="SystemOverview.xml" />
</PAL>
